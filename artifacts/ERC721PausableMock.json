{
  "contractName": "ERC721PausableMock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"ERC721PausableMock This mock just provides a public mint, burn and exists functions for testing purposes\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/mocks/ERC721PausableMock.sol\":\"ERC721PausableMock\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x4b1d0ba51adeaf6fbdd74575980939e3377d928f935ead03c27c04097e1ef9b6\",\"urls\":[\"bzz-raw://58f8f3877d9ec2131de69ea2d79c73f5f1fb36ac61dc1db950bbd11aa5f8952f\",\"dweb:/ipfs/QmaMkdu1zCyj4dNsLS3WYAVVt8aWwDm7jKDgeFKURVP56K\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x2d28a422e4806634f12417039baf71d96bfbb078f39684666be9c3e6301c1936\",\"urls\":[\"bzz-raw://68d6471efa55fb7fb353f67a7ffc77687b31715b0c4a1a791ae397069a4b272f\",\"dweb:/ipfs/QmQywx5AbNHUHeijTwUgjwzxi1UMBzzszWYcq6uckmWJq9\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xe74f965ce77f5e3603fe36d1cc3096fedd007ef50575d5488e7a5d459cafc1b3\",\"urls\":[\"bzz-raw://a8ebe07c2d01e8932d2daa210ac5bf20e18301c64380a05aa595692a7977ae38\",\"dweb:/ipfs/QmZrh6eDNw5fpvUZbSsGoDfe9KczoWFKKNWQjSfsFpdiFU\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf19b0488bdc5536ae6bcb018cd928a0198d842c3b433005edffc512c80e19b4c\",\"urls\":[\"bzz-raw://ee652f469bad9c9665b2f5cd279361143b835ee9ea911667448f7f86fd803e13\",\"dweb:/ipfs/QmSYHCezT9FuzceBo6edTuiwX46zXqt4B9AVLqNpzbg384\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x3e960c6c3d6c0b18222d75cecacaa29d2ceafd9b4505c3e93fc03976ebf89fba\",\"urls\":[\"bzz-raw://9c2decfa46543391c10ccd47ff3f2d583c3328b3b1e8ad6db416845a15bebf9b\",\"dweb:/ipfs/Qme1d6NE4czhSPZVCiA6uKvUUNSNZxFBCmoUcfFkq2pu1o\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x063c0b254c81d18ead109db5fda398e35f6847a906f8fafdf13e53333dfd7ca4\",\"urls\":[\"bzz-raw://c6f60c39290732572804eaa098d33840fdc2bafc59c20e9c40af7a7252f71093\",\"dweb:/ipfs/QmSwdBSm7kJWxKoC791ua6BSaRRdck9WCmDuhGv1JYNydG\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/mocks/ERC721PausableMock.sol\":{\"keccak256\":\"0xa7fe9bc89ce342c21685a85fe91301d83813a16b6e27981b8eca655d09001cee\",\"urls\":[\"bzz-raw://df07b466758416ae419de0edcc13cd5c261c0fb990221b6a5df0d5759dbeab62\",\"dweb:/ipfs/QmRY2RsgE4FoSF634vZjqZwbwvHK5on9TVnntY7e6ZEPwE\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x870e63901fd6525321c53b6ffa99508b36a4f644e406e7754e6aa09bb9b0d220\",\"urls\":[\"bzz-raw://2bee23d1c7afe07c959e1f449a3a9e8873c15f65c45320a0b4705553d21239e4\",\"dweb:/ipfs/QmbnRr1xCXjaxEHUGxDk9EsJeqr7HUBUa3KEy5hhcZ6LVW\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721Pausable.sol\":{\"keccak256\":\"0xf03f10a9ebadee6e3ca9b4a7993a64c9eba76e272c40e4311e996dabd820fd19\",\"urls\":[\"bzz-raw://b21ce4fba57b5b32e28f6956bf0fe9f66e0657f15496b6cbefb01741d7b1cc9b\",\"dweb:/ipfs/QmYWRMo2JRZazem6ZH9dMze78ZFCoC9jHhvKLjy6EkiPvY\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xd6a66b696d12b742179cb6a3c004de8b1605dccea91e205866f409fe37ad8a0b\",\"urls\":[\"bzz-raw://7c53fd08a74c13cf7907852cc9a5ab4e1ab9b600ee7a5b0f5c149359972ac2c0\",\"dweb:/ipfs/QmURHmP1oLQYWkZCoNouMBLFzTPnFCFdAg6J1Q4AykLSfq\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa174db0bd4c3d7b7db25a63111ee6ad644cdb46b5ff04c42f649bed0d9f12678\",\"urls\":[\"bzz-raw://cacf13afcb10f8050772257874178d7c0313c6cb6ffc2e345dc810a6d1c78a12\",\"dweb:/ipfs/QmSitJYR9MZpCkVbg1s2hweu4FhJZZxbJQmYX8J4fSc3rW\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe8026db6cd6f06e5663d7ff54dff3451bde86244c6f10ec7575017d4553f26c0\",\"urls\":[\"bzz-raw://ddd97e7052721cb92996648302a3c0c09b5600625f8e438223a2526119cc099e\",\"dweb:/ipfs/Qmc4qDdckvhj5jpmyWSTRB6RXqTtttbeXY86FxZR8K3WYK\"]}},\"version\":1}",
  "bytecode": "0x608060405261001a6301ffc9a760e01b61005060201b60201c565b6100306380ac58cd60e01b61005060201b60201c565b6000600560006101000a81548160ff021916908315150217905550610158565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156100ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b612094806101676000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80634f558e79116100975780638456cb59116100665780638456cb59146104b6578063a22cb465146104c0578063b88d4fde14610510578063e985e9c51461061557610100565b80634f558e79146103885780635c975abb146103ce5780636352211e146103f057806370a082311461045e57610100565b80633f4ba83a116100d35780633f4ba83a1461029457806340c10f191461029e57806342842e0e146102ec57806342966c681461035a57610100565b806301ffc9a714610105578063081812fc1461016a578063095ea7b3146101d857806323b872dd14610226575b600080fd5b6101506004803603602081101561011b57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610691565b604051808215151515815260200191505060405180910390f35b6101966004803603602081101561018057600080fd5b81019080803590602001909291905050506106f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610224600480360360408110156101ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610793565b005b6102926004803603606081101561023c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108d7565b005b61029c61094d565b005b6102ea600480360360408110156102b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610957565b005b6103586004803603606081101561030257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610965565b005b6103866004803603602081101561037057600080fd5b8101908080359060200190929190505050610985565b005b6103b46004803603602081101561039e57600080fd5b8101908080359060200190929190505050610991565b604051808215151515815260200191505060405180910390f35b6103d66109a3565b604051808215151515815260200191505060405180910390f35b61041c6004803603602081101561040657600080fd5b81019080803590602001909291905050506109ba565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a06004803603602081101561047457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a82565b6040518082815260200191505060405180910390f35b6104be610b57565b005b61050e600480360360408110156104d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610b61565b005b6106136004803603608081101561052657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561058d57600080fd5b82018360208201111561059f57600080fd5b803590602001918460018302840111640100000000831117156105c157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610d19565b005b6106776004803603604081101561062b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d91565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600061070382610e25565b610758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611f93602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061079e826109ba565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610825576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611fe86021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610844610e97565b73ffffffffffffffffffffffffffffffffffffffff16148061087357506108728161086d610e97565b610d91565b5b6108c8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180611f086038913960400191505060405180910390fd5b6108d28383610e9f565b505050565b6108e86108e2610e97565b82610f58565b61093d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806120096031913960400191505060405180910390fd5b61094883838361104c565b505050565b6109556112b4565b565b61096182826113bd565b5050565b61098083838360405180602001604052806000815250610d19565b505050565b61098e816115e1565b50565b600061099c82610e25565b9050919050565b6000600560009054906101000a900460ff16905090565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611f6a6029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611f40602a913960400191505060405180910390fd5b610b50600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206115f6565b9050919050565b610b5f611604565b565b610b69610e97565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060046000610c17610e97565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610cc4610e97565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b610d2a610d24610e97565b83610f58565b610d7f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806120096031913960400191505060405180910390fd5b610d8b8484848461170e565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610f12836109ba565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610f6382610e25565b610fb8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611edc602c913960400191505060405180910390fd5b6000610fc3836109ba565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061103257508373ffffffffffffffffffffffffffffffffffffffff1661101a846106f8565b73ffffffffffffffffffffffffffffffffffffffff16145b8061104357506110428185610d91565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661106c826109ba565b73ffffffffffffffffffffffffffffffffffffffff16146110d8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611fbf6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561115e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611eb86024913960400191505060405180910390fd5b611169838383611780565b611174600082610e9f565b6111bb600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206117ee565b611202600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611811565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600560009054906101000a900460ff16611336576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61137a610e97565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611460576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61146981610e25565b156114dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b6114e860008383611780565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611581600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611811565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6115f36115ed826109ba565b82611827565b50565b600081600001549050919050565b600560009054906101000a900460ff1615611687576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116cb610e97565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b61171984848461104c565b611725848484846119c4565b61177a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180611e866032913960400191505060405180910390fd5b50505050565b61178b838383611d00565b6117936109a3565b156117e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611e5b602b913960400191505060405180910390fd5b505050565b61180660018260000154611d0590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b8173ffffffffffffffffffffffffffffffffffffffff16611847826109ba565b73ffffffffffffffffffffffffffffffffffffffff16146118b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061203a6025913960400191505060405180910390fd5b6118bf82600083611780565b6118ca600082610e9f565b611911600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206117ee565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006119e58473ffffffffffffffffffffffffffffffffffffffff16611d4f565b6119f25760019050611cf8565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b611a36610e97565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ae6578082015181840152602081019050611acb565b50505050905090810190601f168015611b135780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310611bab5780518252602082019150602081019050602083039250611b88565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611c0d576040519150601f19603f3d011682016040523d82523d6000602084013e611c12565b606091505b509150915081611c8057600081511115611c2f5780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180611e866032913960400191505060405180910390fd5b6000818060200190516020811015611c9757600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b505050565b6000611d4783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611d9a565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611d9157506000801b8214155b92505050919050565b6000838311158290611e47576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e0c578082015181840152602081019050611df1565b50505050905090810190601f168015611e395780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4552433732315061757361626c653a20746f6b656e207472616e73666572207768696c65207061757365644552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776ea2646970667358221220b458a8b1ee735a01d2fb39aa85a7052def66747949de65e15fcdf0cabbd2cea664736f6c63430006000033",
  "deployedBytecode": "",
  "sourceMap": "205:476:49:-:0;;;742:40:17;399:10;761:20;;742:18;;;:40;;:::i;:::-;2315::88;2185:10;2334:20;;2315:18;;;:40;;:::i;:::-;1001:5:23;991:7;;:15;;;;;;;;;;;;;;;;;;205:476:49;;1498:201:17;1597:10;1582:25;;:11;:25;;;;;1574:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:4;1651:20;:33;1672:11;1651:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1498:201;:::o;205:476:49:-;;;;;;;",
  "deployedSourceMap": "205:476:49:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;205:476:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:144:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:144:17;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4371:213:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4371:213:88;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3688:390;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3688:390:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6119:309;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6119:309:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;621:57:49;;;:::i;:::-;;258:93;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;258:93:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7090:151:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7090:151:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;359:77:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;359:77:49;;;;;;;;;;;;;;;;;:::i;:::-;;444:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;444:108:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1114:78:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3020:237:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3020:237:88;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2574:220;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2574:220:88;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;560:53:49;;;:::i;:::-;;4891:295:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4891:295:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7978:289;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7978:289:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7978:289:88;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7978:289:88;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7978:289:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7978:289:88;;;;;;;;;;;;;;;:::i;:::-;;5516:156;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5516:156:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;947:144:17;1026:4;1050:20;:33;1071:11;1050:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:40;;947:144;;;:::o;4371:213:88:-;4439:7;4467:16;4475:7;4467;:16::i;:::-;4459:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4552:15;:24;4568:7;4552:24;;;;;;;;;;;;;;;;;;;;;4545:31;;4371:213;;;:::o;3688:390::-;3769:13;3785:16;3793:7;3785;:16::i;:::-;3769:32;;3826:5;3820:11;;:2;:11;;;;3812:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3906:5;3890:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3915:37;3932:5;3939:12;:10;:12::i;:::-;3915:16;:37::i;:::-;3890:62;3882:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4049:21;4058:2;4062:7;4049:8;:21::i;:::-;3688:390;;;:::o;6119:309::-;6280:41;6299:12;:10;:12::i;:::-;6313:7;6280:18;:41::i;:::-;6272:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6388:32;6402:4;6408:2;6412:7;6388:13;:32::i;:::-;6119:309;;;:::o;621:57:49:-;660:10;:8;:10::i;:::-;621:57::o;258:93::-;319:24;331:2;335:7;319:11;:24::i;:::-;258:93;;:::o;7090:151:88:-;7194:39;7211:4;7217:2;7221:7;7194:39;;;;;;;;;;;;:16;:39::i;:::-;7090:151;;;:::o;359:77:49:-;408:20;420:7;408:11;:20::i;:::-;359:77;:::o;444:108::-;498:4;522:22;536:7;522:13;:22::i;:::-;515:29;;444:108;;;:::o;1114:78:23:-;1153:4;1177:7;;;;;;;;;;;1170:14;;1114:78;:::o;3020:237:88:-;3084:7;3104:13;3120:11;:20;3132:7;3120:20;;;;;;;;;;;;;;;;;;;;;3104:36;;3176:1;3159:19;;:5;:19;;;;3151:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3244:5;3237:12;;;3020:237;;;:::o;2574:220::-;2638:7;2683:1;2666:19;;:5;:19;;;;2658:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2752:34;:17;:24;2770:5;2752:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2745:41;;2574:220;;;:::o;560:53:49:-;597:8;:6;:8::i;:::-;560:53::o;4891:295:88:-;5006:12;:10;:12::i;:::-;4994:24;;:8;:24;;;;4986:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5106:8;5061:18;:32;5080:12;:10;:12::i;:::-;5061:32;;;;;;;;;;;;;;;:42;5094:8;5061:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;5159:8;5130:48;;5145:12;:10;:12::i;:::-;5130:48;;;5169:8;5130:48;;;;;;;;;;;;;;;;;;;;;;4891:295;;:::o;7978:289::-;8110:41;8129:12;:10;:12::i;:::-;8143:7;8110:18;:41::i;:::-;8102:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8216:43;8234:4;8240:2;8244:7;8253:5;8216:17;:43::i;:::-;7978:289;;;;:::o;5516:156::-;5605:4;5629:18;:25;5648:5;5629:25;;;;;;;;;;;;;;;:35;5655:8;5629:35;;;;;;;;;;;;;;;;;;;;;;;;;5622:42;;5516:156;;;;:::o;9468:155::-;9525:4;9542:13;9558:11;:20;9570:7;9558:20;;;;;;;;;;;;;;;;;;;;;9542:36;;9613:1;9596:19;;:5;:19;;;;9589:26;;;9468:155;;;:::o;752:106:2:-;805:15;840:10;833:17;;752:106;:::o;16182:158:88:-;16275:2;16248:15;:24;16264:7;16248:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16324:7;16320:2;16293:39;;16302:16;16310:7;16302;:16::i;:::-;16293:39;;;;;;;;;;;;16182:158;;:::o;9993:333::-;10078:4;10103:16;10111:7;10103;:16::i;:::-;10095:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10179:13;10195:16;10203:7;10195;:16::i;:::-;10179:32;;10241:5;10230:16;;:7;:16;;;:51;;;;10274:7;10250:31;;:20;10262:7;10250:11;:20::i;:::-;:31;;;10230:51;:87;;;;10285:32;10302:5;10309:7;10285:16;:32::i;:::-;10230:87;10222:96;;;9993:333;;;;:::o;13882:553::-;14004:4;13984:24;;:16;13992:7;13984;:16::i;:::-;:24;;;13976:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14087:1;14073:16;;:2;:16;;;;14065:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14143:39;14164:4;14170:2;14174:7;14143:20;:39::i;:::-;14223:29;14240:1;14244:7;14223:8;:29::i;:::-;14265:35;:17;:23;14283:4;14265:23;;;;;;;;;;;;;;;:33;:35::i;:::-;14311:33;:17;:21;14329:2;14311:21;;;;;;;;;;;;;;;:31;:33::i;:::-;14380:2;14357:11;:20;14369:7;14357:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;14419:7;14415:2;14400:27;;14409:4;14400:27;;;;;;;;;;;;13882:553;;;:::o;1907:120:23:-;1550:7;;;;;;;;;;;1542:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1976:5:::1;1966:7;;:15;;;;;;;;;;;;;;;;;;1997:22;2006:12;:10;:12::i;:::-;1997:22;;;;;;;;;;;;;;;;;;;;;;1907:120::o:0;12094:401:88:-;12188:1;12174:16;;:2;:16;;;;12166:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12247:16;12255:7;12247;:16::i;:::-;12246:17;12238:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12309:45;12338:1;12342:2;12346:7;12309:20;:45::i;:::-;12390:2;12367:11;:20;12379:7;12367:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12403:33;:17;:21;12421:2;12403:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12479:7;12475:2;12454:33;;12471:1;12454:33;;;;;;;;;;;;12094:401;;:::o;13396:100::-;13456:32;13462:16;13470:7;13462;:16::i;:::-;13480:7;13456:5;:32::i;:::-;13396:100;:::o;1090:114:11:-;1155:7;1182;:14;;;1175:21;;1090:114;;;:::o;1694:118:23:-;1351:7;;;;;;;;;;;1350:8;1342:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1764:4:::1;1754:7;;:14;;;;;;;;;;;;;;;;;;1784:20;1791:12;:10;:12::i;:::-;1784:20;;;;;;;;;;;;;;;;;;;;;;1694:118::o:0;8986:280:88:-;9104:32;9118:4;9124:2;9128:7;9104:13;:32::i;:::-;9155:48;9178:4;9184:2;9188:7;9197:5;9155:22;:48::i;:::-;9147:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8986:280;;;;:::o;250:241:94:-;360:45;387:4;393:2;397:7;360:26;:45::i;:::-;427:8;:6;:8::i;:::-;426:9;418:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;250:241;;;:::o;1401:110:11:-;1482:21;1501:1;1482:7;:14;;;:18;;:21;;;;:::i;:::-;1465:7;:14;;:38;;;;1401:110;:::o;1212:181::-;1384:1;1366:7;:14;;;:19;;;;;;;;;;;1212:181;:::o;12772:436:88:-;12875:5;12855:25;;:16;12863:7;12855;:16::i;:::-;:25;;;12847:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12935:48;12956:5;12971:1;12975:7;12935:20;:48::i;:::-;13024:29;13041:1;13045:7;13024:8;:29::i;:::-;13066:36;:17;:24;13084:5;13066:24;;;;;;;;;;;;;;;:34;:36::i;:::-;13144:1;13113:11;:20;13125:7;13113:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;13192:7;13188:1;13164:36;;13173:5;13164:36;;;;;;;;;;;;12772:436;;:::o;15087:1087::-;15217:4;15244:15;:2;:13;;;:15::i;:::-;15239:60;;15283:4;15276:11;;;;15239:60;15370:12;15384:23;15411:2;:7;;15472:2;15456:36;;;:45;;;;15516:12;:10;:12::i;:::-;15543:4;15562:7;15584:5;15419:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15419:181:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15419:181:88;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;15419:181:88;15411:190;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;15411:190:88;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;15369:232:88;;;;15617:7;15612:555;;15665:1;15645:10;:17;:21;15641:384;;;15813:10;15807:17;15874:15;15861:10;15857:2;15853:19;15846:44;15761:148;15949:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15612:555;16057:13;16084:10;16073:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16073:32:88;;;;;;;;;;;;;;;;16057:48;;775:10;16138:16;;16128:26;;;:6;:26;;;;16120:35;;;;;15087:1087;;;;;;;:::o;16888:93::-;;;;:::o;1315:136:25:-;1373:7;1400:43;1404:1;1407;1400:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1393:50;;1315:136;;;;:::o;708:619:104:-;768:4;1030:16;1057:19;1079:66;1057:88;;;;1248:7;1236:20;1224:32;;1288:11;1276:8;:23;;:42;;;;;1315:3;1303:15;;:8;:15;;1276:42;1268:51;;;;708:619;;;:::o;1788:192:25:-;1874:7;1907:1;1902;:6;;1910:12;1894:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1894:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:9;1950:1;1946;:5;1934:17;;1971:1;1964:8;;;1788:192;;;;;:::o",
  "source": "pragma solidity ^0.6.0;\r\n\r\nimport \"../token/ERC721/ERC721Pausable.sol\";\r\n\r\n/**\r\n * @title ERC721PausableMock\r\n * This mock just provides a public mint, burn and exists functions for testing purposes\r\n */\r\ncontract ERC721PausableMock is ERC721Pausable {\r\n    function mint(address to, uint256 tokenId) public {\r\n        super._mint(to, tokenId);\r\n    }\r\n\r\n    function burn(uint256 tokenId) public {\r\n        super._burn(tokenId);\r\n    }\r\n\r\n    function exists(uint256 tokenId) public view returns (bool) {\r\n        return super._exists(tokenId);\r\n    }\r\n\r\n    function pause() external {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external {\r\n        _unpause();\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\alexa_o12f\\Documents\\Programs\\arrakis-buidl\\contracts\\openzeppelin\\contracts\\mocks\\ERC721PausableMock.sol",
  "ast": {
    "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/mocks/ERC721PausableMock.sol",
    "exportedSymbols": {
      "ERC721PausableMock": [
        4458
      ]
    },
    "id": 4459,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4400,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:49"
      },
      {
        "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "../token/ERC721/ERC721Pausable.sol",
        "id": 4401,
        "nodeType": "ImportDirective",
        "scope": 4459,
        "sourceUnit": 9551,
        "src": "27:44:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4402,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9550,
              "src": "236:14:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$9550",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 4403,
            "nodeType": "InheritanceSpecifier",
            "src": "236:14:49"
          }
        ],
        "contractDependencies": [
          225,
          2690,
          2926,
          3100,
          8898,
          9550,
          9653
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721PausableMock\nThis mock just provides a public mint, burn and exists functions for testing purposes",
        "fullyImplemented": true,
        "id": 4458,
        "linearizedBaseContracts": [
          4458,
          9550,
          3100,
          8898,
          9653,
          2690,
          2926,
          225
        ],
        "name": "ERC721PausableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4417,
              "nodeType": "Block",
              "src": "308:43:49",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4413,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4405,
                        "src": "331:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4414,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4407,
                        "src": "335:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4410,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11769,
                        "src": "319:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PausableMock_$4458",
                          "typeString": "contract super ERC721PausableMock"
                        }
                      },
                      "id": 4412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8652,
                      "src": "319:11:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "319:24:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4416,
                  "nodeType": "ExpressionStatement",
                  "src": "319:24:49"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "40c10f19",
            "id": 4418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4405,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4418,
                  "src": "272:10:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "272:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4407,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4418,
                  "src": "284:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "271:29:49"
            },
            "returnParameters": {
              "id": 4409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "308:0:49"
            },
            "scope": 4458,
            "src": "258:93:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4429,
              "nodeType": "Block",
              "src": "397:39:49",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4426,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4420,
                        "src": "420:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4423,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11769,
                        "src": "408:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PausableMock_$4458",
                          "typeString": "contract super ERC721PausableMock"
                        }
                      },
                      "id": 4425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8723,
                      "src": "408:11:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "408:20:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4428,
                  "nodeType": "ExpressionStatement",
                  "src": "408:20:49"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "42966c68",
            "id": 4430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4420,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4430,
                  "src": "373:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:17:49"
            },
            "returnParameters": {
              "id": 4422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:0:49"
            },
            "scope": 4458,
            "src": "359:77:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4442,
              "nodeType": "Block",
              "src": "504:48:49",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4439,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4432,
                        "src": "536:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4437,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11769,
                        "src": "522:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PausableMock_$4458",
                          "typeString": "contract super ERC721PausableMock"
                        }
                      },
                      "id": 4438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8515,
                      "src": "522:13:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 4440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "522:22:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4436,
                  "id": 4441,
                  "nodeType": "Return",
                  "src": "515:29:49"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4f558e79",
            "id": 4443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4432,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4443,
                  "src": "460:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "459:17:49"
            },
            "returnParameters": {
              "id": 4436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4435,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4443,
                  "src": "498:4:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4434,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "497:6:49"
            },
            "scope": 4458,
            "src": "444:108:49",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4449,
              "nodeType": "Block",
              "src": "586:27:49",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4446,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3084,
                      "src": "597:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "597:8:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4448,
                  "nodeType": "ExpressionStatement",
                  "src": "597:8:49"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8456cb59",
            "id": 4450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:2:49"
            },
            "returnParameters": {
              "id": 4445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:0:49"
            },
            "scope": 4458,
            "src": "560:53:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4456,
              "nodeType": "Block",
              "src": "649:29:49",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4453,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3099,
                      "src": "660:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:10:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4455,
                  "nodeType": "ExpressionStatement",
                  "src": "660:10:49"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3f4ba83a",
            "id": 4457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "637:2:49"
            },
            "returnParameters": {
              "id": 4452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "649:0:49"
            },
            "scope": 4458,
            "src": "621:57:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4459,
        "src": "205:476:49"
      }
    ],
    "src": "0:683:49"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/mocks/ERC721PausableMock.sol",
    "exportedSymbols": {
      "ERC721PausableMock": [
        4458
      ]
    },
    "id": 4459,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4400,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:49"
      },
      {
        "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "../token/ERC721/ERC721Pausable.sol",
        "id": 4401,
        "nodeType": "ImportDirective",
        "scope": 4459,
        "sourceUnit": 9551,
        "src": "27:44:49",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4402,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9550,
              "src": "236:14:49",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$9550",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 4403,
            "nodeType": "InheritanceSpecifier",
            "src": "236:14:49"
          }
        ],
        "contractDependencies": [
          225,
          2690,
          2926,
          3100,
          8898,
          9550,
          9653
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721PausableMock\nThis mock just provides a public mint, burn and exists functions for testing purposes",
        "fullyImplemented": true,
        "id": 4458,
        "linearizedBaseContracts": [
          4458,
          9550,
          3100,
          8898,
          9653,
          2690,
          2926,
          225
        ],
        "name": "ERC721PausableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4417,
              "nodeType": "Block",
              "src": "308:43:49",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4413,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4405,
                        "src": "331:2:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4414,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4407,
                        "src": "335:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4410,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11769,
                        "src": "319:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PausableMock_$4458",
                          "typeString": "contract super ERC721PausableMock"
                        }
                      },
                      "id": 4412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8652,
                      "src": "319:11:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "319:24:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4416,
                  "nodeType": "ExpressionStatement",
                  "src": "319:24:49"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "40c10f19",
            "id": 4418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4405,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4418,
                  "src": "272:10:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "272:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4407,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4418,
                  "src": "284:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "271:29:49"
            },
            "returnParameters": {
              "id": 4409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "308:0:49"
            },
            "scope": 4458,
            "src": "258:93:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4429,
              "nodeType": "Block",
              "src": "397:39:49",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4426,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4420,
                        "src": "420:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4423,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11769,
                        "src": "408:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PausableMock_$4458",
                          "typeString": "contract super ERC721PausableMock"
                        }
                      },
                      "id": 4425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8723,
                      "src": "408:11:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "408:20:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4428,
                  "nodeType": "ExpressionStatement",
                  "src": "408:20:49"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "42966c68",
            "id": 4430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4420,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4430,
                  "src": "373:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:17:49"
            },
            "returnParameters": {
              "id": 4422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:0:49"
            },
            "scope": 4458,
            "src": "359:77:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4442,
              "nodeType": "Block",
              "src": "504:48:49",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4439,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4432,
                        "src": "536:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4437,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11769,
                        "src": "522:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PausableMock_$4458",
                          "typeString": "contract super ERC721PausableMock"
                        }
                      },
                      "id": 4438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8515,
                      "src": "522:13:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 4440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "522:22:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4436,
                  "id": 4441,
                  "nodeType": "Return",
                  "src": "515:29:49"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4f558e79",
            "id": 4443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4432,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4443,
                  "src": "460:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "459:17:49"
            },
            "returnParameters": {
              "id": 4436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4435,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4443,
                  "src": "498:4:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4434,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:4:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "497:6:49"
            },
            "scope": 4458,
            "src": "444:108:49",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4449,
              "nodeType": "Block",
              "src": "586:27:49",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4446,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3084,
                      "src": "597:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "597:8:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4448,
                  "nodeType": "ExpressionStatement",
                  "src": "597:8:49"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8456cb59",
            "id": 4450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:2:49"
            },
            "returnParameters": {
              "id": 4445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:0:49"
            },
            "scope": 4458,
            "src": "560:53:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4456,
              "nodeType": "Block",
              "src": "649:29:49",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4453,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3099,
                      "src": "660:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:10:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4455,
                  "nodeType": "ExpressionStatement",
                  "src": "660:10:49"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3f4ba83a",
            "id": 4457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "637:2:49"
            },
            "returnParameters": {
              "id": 4452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "649:0:49"
            },
            "scope": 4458,
            "src": "621:57:49",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4459,
        "src": "205:476:49"
      }
    ],
    "src": "0:683:49"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-02-15T23:11:41.226Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "ERC721PausableMock This mock just provides a public mint, burn and exists functions for testing purposes"
  },
  "userdoc": {
    "methods": {}
  }
}