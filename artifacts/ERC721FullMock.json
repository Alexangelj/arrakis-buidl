{
  "contractName": "ERC721FullMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.     * _Available since v2.5.0._\"},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.      * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.      * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"ERC721FullMock This mock just provides public functions for setting metadata URI, getting all tokens of an owner, checking token existence, removal of a token from an address\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/mocks/ERC721FullMock.sol\":\"ERC721FullMock\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x4b1d0ba51adeaf6fbdd74575980939e3377d928f935ead03c27c04097e1ef9b6\",\"urls\":[\"bzz-raw://58f8f3877d9ec2131de69ea2d79c73f5f1fb36ac61dc1db950bbd11aa5f8952f\",\"dweb:/ipfs/QmaMkdu1zCyj4dNsLS3WYAVVt8aWwDm7jKDgeFKURVP56K\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x2d28a422e4806634f12417039baf71d96bfbb078f39684666be9c3e6301c1936\",\"urls\":[\"bzz-raw://68d6471efa55fb7fb353f67a7ffc77687b31715b0c4a1a791ae397069a4b272f\",\"dweb:/ipfs/QmQywx5AbNHUHeijTwUgjwzxi1UMBzzszWYcq6uckmWJq9\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xe74f965ce77f5e3603fe36d1cc3096fedd007ef50575d5488e7a5d459cafc1b3\",\"urls\":[\"bzz-raw://a8ebe07c2d01e8932d2daa210ac5bf20e18301c64380a05aa595692a7977ae38\",\"dweb:/ipfs/QmZrh6eDNw5fpvUZbSsGoDfe9KczoWFKKNWQjSfsFpdiFU\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf19b0488bdc5536ae6bcb018cd928a0198d842c3b433005edffc512c80e19b4c\",\"urls\":[\"bzz-raw://ee652f469bad9c9665b2f5cd279361143b835ee9ea911667448f7f86fd803e13\",\"dweb:/ipfs/QmSYHCezT9FuzceBo6edTuiwX46zXqt4B9AVLqNpzbg384\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x063c0b254c81d18ead109db5fda398e35f6847a906f8fafdf13e53333dfd7ca4\",\"urls\":[\"bzz-raw://c6f60c39290732572804eaa098d33840fdc2bafc59c20e9c40af7a7252f71093\",\"dweb:/ipfs/QmSwdBSm7kJWxKoC791ua6BSaRRdck9WCmDuhGv1JYNydG\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/mocks/ERC721FullMock.sol\":{\"keccak256\":\"0x744d889dc12918525aacf4d66278742044ee024aeeccf4d86f34cdce84439705\",\"urls\":[\"bzz-raw://cf504a4284b2b8ed2022e6402aeb8190d7af5d3a954849be6e16201a0b862651\",\"dweb:/ipfs/QmaycehssdWEXM5evrW7BRPH3xesQTUcQdKU159TV8Erwd\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x870e63901fd6525321c53b6ffa99508b36a4f644e406e7754e6aa09bb9b0d220\",\"urls\":[\"bzz-raw://2bee23d1c7afe07c959e1f449a3a9e8873c15f65c45320a0b4705553d21239e4\",\"dweb:/ipfs/QmbnRr1xCXjaxEHUGxDk9EsJeqr7HUBUa3KEy5hhcZ6LVW\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\":{\"keccak256\":\"0x554edcd5631ced16a6ef2898a26877612a8d295606e6cc9cd41396487aee2510\",\"urls\":[\"bzz-raw://413d63c28768b51a46a322a3be22f95fdb2f64b37d85dff92184e5137a207d33\",\"dweb:/ipfs/QmbX6K453w2uR5Ns56HTQQfWPwnRFWzuCPyJgKA4i5MrTK\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x99c093d60438ffda1c0b97cb476deba4c5dbf7d55267279eb6952cab0b22d384\",\"urls\":[\"bzz-raw://4a5124509d14450cd94af90eafd4712e8b9afb3638315ad28538a31b33707fe8\",\"dweb:/ipfs/QmWsML8gAKiakaozasoCwYGa2njgwFZvRsxPzyTpyoa34h\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0xb37af0071c348aaedba83d3eb7ffe93461076edaec7238dff32d7a851ae80bd7\",\"urls\":[\"bzz-raw://703dd0e9a47d5faefffb7e04a97d346a402e09d4454adfc91c49993aaaa006e4\",\"dweb:/ipfs/QmYMg93z9qNwhyrahhdmHffqe49z8innRCkvJTjA1bvrfp\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xe07bbdc61bb268b9b41cad75382c03843e7e0b7aeab0125dda50a74934d02460\",\"urls\":[\"bzz-raw://17fa0dbf7e7abd70e31a1bbbef9df04f6ba7dd8c289db82cd6f00bf88bc26509\",\"dweb:/ipfs/QmfEjnVSbEP3KqYqyaCNHE4ivBwztBqRPmyLxqcqHLq899\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xd6a66b696d12b742179cb6a3c004de8b1605dccea91e205866f409fe37ad8a0b\",\"urls\":[\"bzz-raw://7c53fd08a74c13cf7907852cc9a5ab4e1ab9b600ee7a5b0f5c149359972ac2c0\",\"dweb:/ipfs/QmURHmP1oLQYWkZCoNouMBLFzTPnFCFdAg6J1Q4AykLSfq\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xcfc26920257e43543707235c3e11af1027a1eae6e81e46f6e16e9bebefd1dd54\",\"urls\":[\"bzz-raw://e80494dfd0fca9146a1dee79805f60bd1ef9887383932d4038f7a78db4fca4f8\",\"dweb:/ipfs/QmQsJ75QJNyWEVa51UAzkWFaMcd9v6bnyqpYzERs3AMeja\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xf85c6c69196c0332ec1d222360a8a7c036f0d94bf9890d5eec1d236d42752bf1\",\"urls\":[\"bzz-raw://4ccdaf226dda94531c34e1b7a6d514114368a282cd1e73382738da8f2e1a33a7\",\"dweb:/ipfs/QmeCnAsk7Z4gWRcFxHy6iBG4fTTWS87NiJK385yuGHgXu1\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa174db0bd4c3d7b7db25a63111ee6ad644cdb46b5ff04c42f649bed0d9f12678\",\"urls\":[\"bzz-raw://cacf13afcb10f8050772257874178d7c0313c6cb6ffc2e345dc810a6d1c78a12\",\"dweb:/ipfs/QmSitJYR9MZpCkVbg1s2hweu4FhJZZxbJQmYX8J4fSc3rW\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe8026db6cd6f06e5663d7ff54dff3451bde86244c6f10ec7575017d4553f26c0\",\"urls\":[\"bzz-raw://ddd97e7052721cb92996648302a3c0c09b5600625f8e438223a2526119cc099e\",\"dweb:/ipfs/Qmc4qDdckvhj5jpmyWSTRB6RXqTtttbeXY86FxZR8K3WYK\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620034d7380380620034d7833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405250505081818181620001d16301ffc9a760e01b6200025760201b60201c565b620001e96380ac58cd60e01b6200025760201b60201c565b6200020163780e9d6360e01b6200025760201b60201c565b81600990805190602001906200021992919062000360565b5080600a90805190602001906200023292919062000360565b506200024b635b5e139f60e01b6200025760201b60201c565b5050505050506200040f565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003a357805160ff1916838001178555620003d4565b82800160010185558215620003d4579182015b82811115620003d3578251825591602001919060010190620003b6565b5b509050620003e39190620003e7565b5090565b6200040c91905b8082111562000408576000816000905550600101620003ee565b5090565b90565b6130b8806200041f6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80634f558e79116100c35780638462151c1161007c5780638462151c1461081f57806395d89b41146108b8578063a22cb4651461093b578063b88d4fde1461098b578063c87b56dd14610a90578063e985e9c514610b375761014d565b80634f558e79146105935780634f6ccce7146105d957806355f804b31461061b5780636352211e146106d65780636c0360eb1461074457806370a08231146107c75761014d565b806318160ddd1161011557806318160ddd146103bb57806323b872dd146103d95780632f745c591461044757806340c10f19146104a957806342842e0e146104f757806342966c68146105655761014d565b806301ffc9a71461015257806306fdde03146101b7578063081812fc1461023a578063095ea7b3146102a8578063162094c4146102f6575b600080fd5b61019d6004803603602081101561016857600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610bb3565b604051808215151515815260200191505060405180910390f35b6101bf610c1a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ff5780820151818401526020810190506101e4565b50505050905090810190601f16801561022c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102666004803603602081101561025057600080fd5b8101908080359060200190929190505050610cbc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102f4600480360360408110156102be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d57565b005b6103b96004803603604081101561030c57600080fd5b81019080803590602001909291908035906020019064010000000081111561033357600080fd5b82018360208201111561034557600080fd5b8035906020019184600183028401116401000000008311171561036757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e9b565b005b6103c3610ea9565b6040518082815260200191505060405180910390f35b610445600480360360608110156103ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eb6565b005b6104936004803603604081101561045d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f2c565b6040518082815260200191505060405180910390f35b6104f5600480360360408110156104bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610feb565b005b6105636004803603606081101561050d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ff9565b005b6105916004803603602081101561057b57600080fd5b8101908080359060200190929190505050611019565b005b6105bf600480360360208110156105a957600080fd5b810190808035906020019092919050505061108b565b604051808215151515815260200191505060405180910390f35b610605600480360360208110156105ef57600080fd5b810190808035906020019092919050505061109d565b6040518082815260200191505060405180910390f35b6106d46004803603602081101561063157600080fd5b810190808035906020019064010000000081111561064e57600080fd5b82018360208201111561066057600080fd5b8035906020019184600183028401116401000000008311171561068257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061111d565b005b610702600480360360208110156106ec57600080fd5b8101908080359060200190929190505050611129565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61074c6111f1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078c578082015181840152602081019050610771565b50505050905090810190601f1680156107b95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610809600480360360208110156107dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611293565b6040518082815260200191505060405180910390f35b6108616004803603602081101561083557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611368565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108a4578082015181840152602081019050610889565b505050509050019250505060405180910390f35b6108c06113c9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109005780820151818401526020810190506108e5565b50505050905090810190601f16801561092d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6109896004803603604081101561095157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061146b565b005b610a8e600480360360808110156109a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a0857600080fd5b820183602082011115610a1a57600080fd5b80359060200191846001830284011164010000000083111715610a3c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611623565b005b610abc60048036036020811015610aa657600080fd5b810190808035906020019092919050505061169b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610afc578082015181840152602081019050610ae1565b50505050905090810190601f168015610b295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b9960048036036040811015610b4d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061189d565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb25780601f10610c8757610100808354040283529160200191610cb2565b820191906000526020600020905b815481529060010190602001808311610c9557829003601f168201915b5050505050905090565b6000610cc782611931565b610d1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612f00602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d6282611129565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610de9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612fb06021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610e086119a3565b73ffffffffffffffffffffffffffffffffffffffff161480610e375750610e3681610e316119a3565b61189d565b5b610e8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612e756038913960400191505060405180910390fd5b610e9683836119ab565b505050565b610ea58282611a64565b5050565b6000600780549050905090565b610ec7610ec16119a3565b82611aee565b610f1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612fd16031913960400191505060405180910390fd5b610f27838383611be2565b505050565b6000610f3783611293565b8210610f8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612dc8602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610fd857fe5b9060005260206000200154905092915050565b610ff58282611e4a565b5050565b61101483838360405180602001604052806000815250611623565b505050565b61102a6110246119a3565b82611aee565b61107f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806130536030913960400191505060405180910390fd5b6110888161206e565b50565b600061109682611931565b9050919050565b60006110a7610ea9565b82106110fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613002602c913960400191505060405180910390fd5b6007828154811061110b57fe5b90600052602060002001549050919050565b61112681612083565b50565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612ed76029913960400191505060405180910390fd5b80915050919050565b6060600b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112895780601f1061125e57610100808354040283529160200191611289565b820191906000526020600020905b81548152906001019060200180831161126c57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561131a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612ead602a913960400191505060405180910390fd5b611361600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061209d565b9050919050565b6060611373826120ab565b8054806020026020016040519081016040528092919081815260200182805480156113bd57602002820191906000526020600020905b8154815260200190600101908083116113a9575b50505050509050919050565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114615780601f1061143657610100808354040283529160200191611461565b820191906000526020600020905b81548152906001019060200180831161144457829003601f168201915b5050505050905090565b6114736119a3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611514576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600460006115216119a3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166115ce6119a3565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61163461162e6119a3565b83611aee565b611689576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612fd16031913960400191505060405180910390fd5b611695848484846120f3565b50505050565b60606116a682611931565b6116fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612f81602f913960400191505060405180910390fd5b6060600c60008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117a45780601f10611779576101008083540402835291602001916117a4565b820191906000526020600020905b81548152906001019060200180831161178757829003601f168201915b505050505090506000815114156117cd5760405180602001604052806000815250915050611898565b600b81604051602001808380546001816001161561010002031660029004801561182e5780601f1061180c57610100808354040283529182019161182e565b820191906000526020600020905b81548152906001019060200180831161181a575b505082805190602001908083835b6020831061185f578051825260208201915060208101905060208303925061183c565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611a1e83611129565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b611a6d82611931565b611ac2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612f2c602c913960400191505060405180910390fd5b80600c60008481526020019081526020016000209080519060200190611ae9929190612cda565b505050565b6000611af982611931565b611b4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612e49602c913960400191505060405180910390fd5b6000611b5983611129565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611bc857508373ffffffffffffffffffffffffffffffffffffffff16611bb084610cbc565b73ffffffffffffffffffffffffffffffffffffffff16145b80611bd95750611bd8818561189d565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611c0282611129565b73ffffffffffffffffffffffffffffffffffffffff1614611c6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612f586029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611cf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612e256024913960400191505060405180910390fd5b611cff838383612165565b611d0a6000826119ab565b611d51600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612175565b611d98600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612198565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611eed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b611ef681611931565b15611f69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b611f7560008383612165565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061200e600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612198565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b61208061207a82611129565b826121ae565b50565b80600b9080519060200190612099929190612cda565b5050565b600081600001549050919050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050919050565b6120fe848484611be2565b61210a8484848461234b565b61215f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612df36032913960400191505060405180910390fd5b50505050565b612170838383612687565b505050565b61218d6001826000015461269790919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b8173ffffffffffffffffffffffffffffffffffffffff166121ce82611129565b73ffffffffffffffffffffffffffffffffffffffff161461223a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061302e6025913960400191505060405180910390fd5b61224682600083612165565b6122516000826119ab565b612298600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612175565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600061236c8473ffffffffffffffffffffffffffffffffffffffff166126e1565b612379576001905061267f565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b6123bd6119a3565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561246d578082015181840152602081019050612452565b50505050905090810190601f16801561249a5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310612532578051825260208201915060208101905060208303925061250f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612594576040519150601f19603f3d011682016040523d82523d6000602084013e612599565b606091505b509150915081612607576000815111156125b65780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612df36032913960400191505060405180910390fd5b600081806020019051602081101561261e57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b61269283838361272c565b505050565b60006126d983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506127c1565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561272357506000801b8214155b92505050919050565b612737838383612881565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156127bc576000600c6000838152602001908152602001600020805460018160011615610100020316600290049050146127bb57600c600082815260200190815260200160002060006127ba9190612d5a565b5b5b505050565b600083831115829061286e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612833578082015181840152602081019050612818565b50505050905090810190601f1680156128605780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b61288c83838361295a565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156128d9576128cb828261295f565b6128d481612a23565b612955565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561293f576129188382612a6c565b6000600660008381526020019081526020016000208190555061293a81612c15565b612954565b6129498382612a6c565b612953828261295f565b5b5b505050565b505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505060019003906000526020600020016000909190919091505550565b6000612ac46001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061269790919063ffffffff16565b9050600060066000848152602001908152602001600020549050818114612bb1576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612b3157fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612b8957fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480612bf957fe5b6001900381819060005260206000200160009055905550505050565b6000612c30600160078054905061269790919063ffffffff16565b9050600060086000848152602001908152602001600020549050600060078381548110612c5957fe5b906000526020600020015490508060078381548110612c7457fe5b90600052602060002001819055508160086000838152602001908152602001600020819055506007805480612ca557fe5b600190038181906000526020600020016000905590556000600860008681526020019081526020016000208190555050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612d1b57805160ff1916838001178555612d49565b82800160010185558215612d49579182015b82811115612d48578251825591602001919060010190612d2d565b5b509050612d569190612da2565b5090565b50805460018160011615610100020316600290046000825580601f10612d805750612d9f565b601f016020900490600052602060002090810190612d9e9190612da2565b5b50565b612dc491905b80821115612dc0576000816000905550600101612da8565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e64734552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212204078a719c434079c843b6c3272ca2d7cd4c362569f514070ab4cc58866fa86d364736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80634f558e79116100c35780638462151c1161007c5780638462151c1461081f57806395d89b41146108b8578063a22cb4651461093b578063b88d4fde1461098b578063c87b56dd14610a90578063e985e9c514610b375761014d565b80634f558e79146105935780634f6ccce7146105d957806355f804b31461061b5780636352211e146106d65780636c0360eb1461074457806370a08231146107c75761014d565b806318160ddd1161011557806318160ddd146103bb57806323b872dd146103d95780632f745c591461044757806340c10f19146104a957806342842e0e146104f757806342966c68146105655761014d565b806301ffc9a71461015257806306fdde03146101b7578063081812fc1461023a578063095ea7b3146102a8578063162094c4146102f6575b600080fd5b61019d6004803603602081101561016857600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610bb3565b604051808215151515815260200191505060405180910390f35b6101bf610c1a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ff5780820151818401526020810190506101e4565b50505050905090810190601f16801561022c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102666004803603602081101561025057600080fd5b8101908080359060200190929190505050610cbc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102f4600480360360408110156102be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d57565b005b6103b96004803603604081101561030c57600080fd5b81019080803590602001909291908035906020019064010000000081111561033357600080fd5b82018360208201111561034557600080fd5b8035906020019184600183028401116401000000008311171561036757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e9b565b005b6103c3610ea9565b6040518082815260200191505060405180910390f35b610445600480360360608110156103ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eb6565b005b6104936004803603604081101561045d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f2c565b6040518082815260200191505060405180910390f35b6104f5600480360360408110156104bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610feb565b005b6105636004803603606081101561050d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ff9565b005b6105916004803603602081101561057b57600080fd5b8101908080359060200190929190505050611019565b005b6105bf600480360360208110156105a957600080fd5b810190808035906020019092919050505061108b565b604051808215151515815260200191505060405180910390f35b610605600480360360208110156105ef57600080fd5b810190808035906020019092919050505061109d565b6040518082815260200191505060405180910390f35b6106d46004803603602081101561063157600080fd5b810190808035906020019064010000000081111561064e57600080fd5b82018360208201111561066057600080fd5b8035906020019184600183028401116401000000008311171561068257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061111d565b005b610702600480360360208110156106ec57600080fd5b8101908080359060200190929190505050611129565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61074c6111f1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561078c578082015181840152602081019050610771565b50505050905090810190601f1680156107b95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610809600480360360208110156107dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611293565b6040518082815260200191505060405180910390f35b6108616004803603602081101561083557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611368565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108a4578082015181840152602081019050610889565b505050509050019250505060405180910390f35b6108c06113c9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109005780820151818401526020810190506108e5565b50505050905090810190601f16801561092d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6109896004803603604081101561095157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061146b565b005b610a8e600480360360808110156109a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a0857600080fd5b820183602082011115610a1a57600080fd5b80359060200191846001830284011164010000000083111715610a3c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611623565b005b610abc60048036036020811015610aa657600080fd5b810190808035906020019092919050505061169b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610afc578082015181840152602081019050610ae1565b50505050905090810190601f168015610b295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610b9960048036036040811015610b4d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061189d565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb25780601f10610c8757610100808354040283529160200191610cb2565b820191906000526020600020905b815481529060010190602001808311610c9557829003601f168201915b5050505050905090565b6000610cc782611931565b610d1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612f00602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d6282611129565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610de9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612fb06021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610e086119a3565b73ffffffffffffffffffffffffffffffffffffffff161480610e375750610e3681610e316119a3565b61189d565b5b610e8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612e756038913960400191505060405180910390fd5b610e9683836119ab565b505050565b610ea58282611a64565b5050565b6000600780549050905090565b610ec7610ec16119a3565b82611aee565b610f1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612fd16031913960400191505060405180910390fd5b610f27838383611be2565b505050565b6000610f3783611293565b8210610f8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612dc8602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610fd857fe5b9060005260206000200154905092915050565b610ff58282611e4a565b5050565b61101483838360405180602001604052806000815250611623565b505050565b61102a6110246119a3565b82611aee565b61107f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806130536030913960400191505060405180910390fd5b6110888161206e565b50565b600061109682611931565b9050919050565b60006110a7610ea9565b82106110fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613002602c913960400191505060405180910390fd5b6007828154811061110b57fe5b90600052602060002001549050919050565b61112681612083565b50565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612ed76029913960400191505060405180910390fd5b80915050919050565b6060600b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112895780601f1061125e57610100808354040283529160200191611289565b820191906000526020600020905b81548152906001019060200180831161126c57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561131a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612ead602a913960400191505060405180910390fd5b611361600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061209d565b9050919050565b6060611373826120ab565b8054806020026020016040519081016040528092919081815260200182805480156113bd57602002820191906000526020600020905b8154815260200190600101908083116113a9575b50505050509050919050565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114615780601f1061143657610100808354040283529160200191611461565b820191906000526020600020905b81548152906001019060200180831161144457829003601f168201915b5050505050905090565b6114736119a3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611514576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600460006115216119a3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166115ce6119a3565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61163461162e6119a3565b83611aee565b611689576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612fd16031913960400191505060405180910390fd5b611695848484846120f3565b50505050565b60606116a682611931565b6116fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612f81602f913960400191505060405180910390fd5b6060600c60008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117a45780601f10611779576101008083540402835291602001916117a4565b820191906000526020600020905b81548152906001019060200180831161178757829003601f168201915b505050505090506000815114156117cd5760405180602001604052806000815250915050611898565b600b81604051602001808380546001816001161561010002031660029004801561182e5780601f1061180c57610100808354040283529182019161182e565b820191906000526020600020905b81548152906001019060200180831161181a575b505082805190602001908083835b6020831061185f578051825260208201915060208101905060208303925061183c565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611a1e83611129565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b611a6d82611931565b611ac2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612f2c602c913960400191505060405180910390fd5b80600c60008481526020019081526020016000209080519060200190611ae9929190612cda565b505050565b6000611af982611931565b611b4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612e49602c913960400191505060405180910390fd5b6000611b5983611129565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611bc857508373ffffffffffffffffffffffffffffffffffffffff16611bb084610cbc565b73ffffffffffffffffffffffffffffffffffffffff16145b80611bd95750611bd8818561189d565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611c0282611129565b73ffffffffffffffffffffffffffffffffffffffff1614611c6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612f586029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611cf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612e256024913960400191505060405180910390fd5b611cff838383612165565b611d0a6000826119ab565b611d51600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612175565b611d98600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612198565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611eed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b611ef681611931565b15611f69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b611f7560008383612165565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061200e600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612198565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b61208061207a82611129565b826121ae565b50565b80600b9080519060200190612099929190612cda565b5050565b600081600001549050919050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050919050565b6120fe848484611be2565b61210a8484848461234b565b61215f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612df36032913960400191505060405180910390fd5b50505050565b612170838383612687565b505050565b61218d6001826000015461269790919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b8173ffffffffffffffffffffffffffffffffffffffff166121ce82611129565b73ffffffffffffffffffffffffffffffffffffffff161461223a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061302e6025913960400191505060405180910390fd5b61224682600083612165565b6122516000826119ab565b612298600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612175565b60006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600061236c8473ffffffffffffffffffffffffffffffffffffffff166126e1565b612379576001905061267f565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b6123bd6119a3565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561246d578082015181840152602081019050612452565b50505050905090810190601f16801561249a5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310612532578051825260208201915060208101905060208303925061250f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612594576040519150601f19603f3d011682016040523d82523d6000602084013e612599565b606091505b509150915081612607576000815111156125b65780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612df36032913960400191505060405180910390fd5b600081806020019051602081101561261e57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b61269283838361272c565b505050565b60006126d983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506127c1565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561272357506000801b8214155b92505050919050565b612737838383612881565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156127bc576000600c6000838152602001908152602001600020805460018160011615610100020316600290049050146127bb57600c600082815260200190815260200160002060006127ba9190612d5a565b5b5b505050565b600083831115829061286e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612833578082015181840152602081019050612818565b50505050905090810190601f1680156128605780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b61288c83838361295a565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156128d9576128cb828261295f565b6128d481612a23565b612955565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561293f576129188382612a6c565b6000600660008381526020019081526020016000208190555061293a81612c15565b612954565b6129498382612a6c565b612953828261295f565b5b5b505050565b505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505060019003906000526020600020016000909190919091505550565b6000612ac46001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061269790919063ffffffff16565b9050600060066000848152602001908152602001600020549050818114612bb1576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612b3157fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110612b8957fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480612bf957fe5b6001900381819060005260206000200160009055905550505050565b6000612c30600160078054905061269790919063ffffffff16565b9050600060086000848152602001908152602001600020549050600060078381548110612c5957fe5b906000526020600020015490508060078381548110612c7457fe5b90600052602060002001819055508160086000838152602001908152602001600020819055506007805480612ca557fe5b600190038181906000526020600020016000905590556000600860008681526020019081526020016000208190555050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612d1b57805160ff1916838001178555612d49565b82800160010185558215612d49579182015b82811115612d48578251825591602001919060010190612d2d565b5b509050612d569190612da2565b5090565b50805460018160011615610100020316600290046000825580601f10612d805750612d9f565b601f016020900490600052602060002090810190612d9e9190612da2565b5b50565b612dc491905b80821115612dc0576000816000905550600101612da8565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e64734552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212204078a719c434079c843b6c3272ca2d7cd4c362569f514070ab4cc58866fa86d364736f6c63430006000033",
  "sourceMap": "321:896:46:-:0;;;382:90;8:9:-1;5:2;;;30:1;27;20:12;5:2;382:90:46;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;382:90:46;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;382:90:46;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;382:90:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;382:90:46;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;382:90:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;455:4;461:6;515:4:91;521:6;742:40:17;399:10;761:20;;742:18;;;:40;;:::i;:::-;2315::88;2185:10;2334:20;;2315:18;;;:40;;:::i;:::-;1395:51:90;1203:10;1414:31;;1395:18;;;:51;;:::i;:::-;953:4:93;945:5;:12;;;;;;;;;;;;:::i;:::-;;978:6;968:7;:16;;;;;;;;;;;;:::i;:::-;;1075:49;801:10;1094:29;;1075:18;;;:49;;:::i;:::-;872:260;;438:94:91;;382:90:46;;321:896;;1498:201:17;1597:10;1582:25;;:11;:25;;;;;1574:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:4;1651:20;:33;1672:11;1651:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1498:201;:::o;321:896:46:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "321:896:46:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;321:896:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:144:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:144:17;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1243:94:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1243:94:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4371:213:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4371:213:88;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3688:390;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3688:390:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;722:109:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;722:109:46;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;722:109:46;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;722:109:46;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;722:109:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;722:109:46;;;;;;;;;;;;;;;:::i;:::-;;2236:105:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6119:309:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6119:309:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1836:241:90;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1836:241:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1127:87:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1127:87:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7090:151:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7090:151:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;376:245:89;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;376:245:89;;;;;;;;;;;;;;;;;:::i;:::-;;480:102:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;480:102:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2687:208:90;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2687:208:90;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;839:89:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;839:89:46;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;839:89:46;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;839:89:46;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;839:89:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;839:89:46;;;;;;;;;;;;;;;:::i;:::-;;3020:237:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3020:237:88;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3539:91:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3539:91:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:220:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2574:220:88;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;590:124:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;590:124:46;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;590:124:46;;;;;;;;;;;;;;;;;1452:98:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1452:98:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4891:295:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4891:295:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7978:289;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7978:289:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7978:289:88;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7978:289:88;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7978:289:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7978:289:88;;;;;;;;;;;;;;;:::i;:::-;;1863:566:93;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1863:566:93;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1863:566:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5516:156:88;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5516:156:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;947:144:17;1026:4;1050:20;:33;1071:11;1050:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:40;;947:144;;;:::o;1243:94:93:-;1291:13;1324:5;1317:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:94;:::o;4371:213:88:-;4439:7;4467:16;4475:7;4467;:16::i;:::-;4459:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4552:15;:24;4568:7;4552:24;;;;;;;;;;;;;;;;;;;;;4545:31;;4371:213;;;:::o;3688:390::-;3769:13;3785:16;3793:7;3785;:16::i;:::-;3769:32;;3826:5;3820:11;;:2;:11;;;;3812:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3906:5;3890:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3915:37;3932:5;3939:12;:10;:12::i;:::-;3915:16;:37::i;:::-;3890:62;3882:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4049:21;4058:2;4062:7;4049:8;:21::i;:::-;3688:390;;;:::o;722:109:46:-;797:26;810:7;819:3;797:12;:26::i;:::-;722:109;;:::o;2236:105:90:-;2289:7;2316:10;:17;;;;2309:24;;2236:105;:::o;6119:309:88:-;6280:41;6299:12;:10;:12::i;:::-;6313:7;6280:18;:41::i;:::-;6272:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6388:32;6402:4;6408:2;6412:7;6388:13;:32::i;:::-;6119:309;;;:::o;1836:241:90:-;1925:7;1961:16;1971:5;1961:9;:16::i;:::-;1953:5;:24;1945:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2043:12;:19;2056:5;2043:19;;;;;;;;;;;;;;;2063:5;2043:26;;;;;;;;;;;;;;;;2036:33;;1836:241;;;;:::o;1127:87:46:-;1188:18;1194:2;1198:7;1188:5;:18::i;:::-;1127:87;;:::o;7090:151:88:-;7194:39;7211:4;7217:2;7221:7;7194:39;;;;;;;;;;;;:16;:39::i;:::-;7090:151;;;:::o;376:245:89:-;494:41;513:12;:10;:12::i;:::-;527:7;494:18;:41::i;:::-;486:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;599:14;605:7;599:5;:14::i;:::-;376:245;:::o;480:102:46:-;534:4;558:16;566:7;558;:16::i;:::-;551:23;;480:102;;;:::o;2687:208:90:-;2754:7;2790:13;:11;:13::i;:::-;2782:5;:21;2774:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2870:10;2881:5;2870:17;;;;;;;;;;;;;;;;2863:24;;2687:208;;;:::o;839:89:46:-;900:20;912:7;900:11;:20::i;:::-;839:89;:::o;3020:237:88:-;3084:7;3104:13;3120:11;:20;3132:7;3120:20;;;;;;;;;;;;;;;;;;;;;3104:36;;3176:1;3159:19;;:5;:19;;;;3151:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3244:5;3237:12;;;3020:237;;;:::o;3539:91:93:-;3581:13;3614:8;3607:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3539:91;:::o;2574:220:88:-;2638:7;2683:1;2666:19;;:5;:19;;;;2658:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2752:34;:17;:24;2770:5;2752:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2745:41;;2574:220;;;:::o;590:124:46:-;649:16;685:21;700:5;685:14;:21::i;:::-;678:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;590:124;;;:::o;1452:98:93:-;1502:13;1535:7;1528:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1452:98;:::o;4891:295:88:-;5006:12;:10;:12::i;:::-;4994:24;;:8;:24;;;;4986:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5106:8;5061:18;:32;5080:12;:10;:12::i;:::-;5061:32;;;;;;;;;;;;;;;:42;5094:8;5061:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;5159:8;5130:48;;5145:12;:10;:12::i;:::-;5130:48;;;5169:8;5130:48;;;;;;;;;;;;;;;;;;;;;;4891:295;;:::o;7978:289::-;8110:41;8129:12;:10;:12::i;:::-;8143:7;8110:18;:41::i;:::-;8102:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8216:43;8234:4;8240:2;8244:7;8253:5;8216:17;:43::i;:::-;7978:289;;;;:::o;1863:566:93:-;1930:13;1964:16;1972:7;1964;:16::i;:::-;1956:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2045:23;2071:10;:19;2082:7;2071:19;;;;;;;;;;;2045:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:1;2207:9;2201:23;:28;2197:225;;;2246:9;;;;;;;;;;;;;;;;;2197:225;2389:8;2399:9;2372:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2372:37:93;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2372:37:93;;;2358:52;;;1863:566;;;;:::o;5516:156:88:-;5605:4;5629:18;:25;5648:5;5629:25;;;;;;;;;;;;;;;:35;5655:8;5629:35;;;;;;;;;;;;;;;;;;;;;;;;;5622:42;;5516:156;;;;:::o;9468:155::-;9525:4;9542:13;9558:11;:20;9570:7;9558:20;;;;;;;;;;;;;;;;;;;;;9542:36;;9613:1;9596:19;;:5;:19;;;;9589:26;;;9468:155;;;:::o;752:106:2:-;805:15;840:10;833:17;;752:106;:::o;16182:158:88:-;16275:2;16248:15;:24;16264:7;16248:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16324:7;16320:2;16293:39;;16302:16;16310:7;16302;:16::i;:::-;16293:39;;;;;;;;;;;;16182:158;;:::o;2764:215:93:-;2864:16;2872:7;2864;:16::i;:::-;2856:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2962:9;2940:10;:19;2951:7;2940:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;2764:215;;:::o;9993:333:88:-;10078:4;10103:16;10111:7;10103;:16::i;:::-;10095:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10179:13;10195:16;10203:7;10195;:16::i;:::-;10179:32;;10241:5;10230:16;;:7;:16;;;:51;;;;10274:7;10250:31;;:20;10262:7;10250:11;:20::i;:::-;:31;;;10230:51;:87;;;;10285:32;10302:5;10309:7;10285:16;:32::i;:::-;10230:87;10222:96;;;9993:333;;;;:::o;13882:553::-;14004:4;13984:24;;:16;13992:7;13984;:16::i;:::-;:24;;;13976:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14087:1;14073:16;;:2;:16;;;;14065:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14143:39;14164:4;14170:2;14174:7;14143:20;:39::i;:::-;14223:29;14240:1;14244:7;14223:8;:29::i;:::-;14265:35;:17;:23;14283:4;14265:23;;;;;;;;;;;;;;;:33;:35::i;:::-;14311:33;:17;:21;14329:2;14311:21;;;;;;;;;;;;;;;:31;:33::i;:::-;14380:2;14357:11;:20;14369:7;14357:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;14419:7;14415:2;14400:27;;14409:4;14400:27;;;;;;;;;;;;13882:553;;;:::o;12094:401::-;12188:1;12174:16;;:2;:16;;;;12166:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12247:16;12255:7;12247;:16::i;:::-;12246:17;12238:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12309:45;12338:1;12342:2;12346:7;12309:20;:45::i;:::-;12390:2;12367:11;:20;12379:7;12367:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12403:33;:17;:21;12421:2;12403:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12479:7;12475:2;12454:33;;12471:1;12454:33;;;;;;;;;;;;12094:401;;:::o;13396:100::-;13456:32;13462:16;13470:7;13462;:16::i;:::-;13480:7;13456:5;:32::i;:::-;13396:100;:::o;3200:98:93:-;3283:7;3272:8;:18;;;;;;;;;;;;:::i;:::-;;3200:98;:::o;1090:114:11:-;1155:7;1182;:14;;;1175:21;;1090:114;;;:::o;3952:126:90:-;4014:17;4051:12;:19;4064:5;4051:19;;;;;;;;;;;;;;;4044:26;;3952:126;;;:::o;8986:280:88:-;9104:32;9118:4;9124:2;9128:7;9104:13;:32::i;:::-;9155:48;9178:4;9184:2;9188:7;9197:5;9155:22;:48::i;:::-;9147:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8986:280;;;;:::o;936:183:46:-;1066:45;1093:4;1099:2;1103:7;1066:26;:45::i;:::-;936:183;;;:::o;1401:110:11:-;1482:21;1501:1;1482:7;:14;;;:18;;:21;;;;:::i;:::-;1465:7;:14;;:38;;;;1401:110;:::o;1212:181::-;1384:1;1366:7;:14;;;:19;;;;;;;;;;;1212:181;:::o;12772:436:88:-;12875:5;12855:25;;:16;12863:7;12855;:16::i;:::-;:25;;;12847:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12935:48;12956:5;12971:1;12975:7;12935:20;:48::i;:::-;13024:29;13041:1;13045:7;13024:8;:29::i;:::-;13066:36;:17;:24;13084:5;13066:24;;;;;;;;;;;;;;;:34;:36::i;:::-;13144:1;13113:11;:20;13125:7;13113:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;13192:7;13188:1;13164:36;;13173:5;13164:36;;;;;;;;;;;;12772:436;;:::o;15087:1087::-;15217:4;15244:15;:2;:13;;;:15::i;:::-;15239:60;;15283:4;15276:11;;;;15239:60;15370:12;15384:23;15411:2;:7;;15472:2;15456:36;;;:45;;;;15516:12;:10;:12::i;:::-;15543:4;15562:7;15584:5;15419:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15419:181:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15419:181:88;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;15419:181:88;15411:190;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;15411:190:88;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;15369:232:88;;;;15617:7;15612:555;;15665:1;15645:10;:17;:21;15641:384;;;15813:10;15807:17;15874:15;15861:10;15857:2;15853:19;15846:44;15761:148;15949:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15612:555;16057:13;16084:10;16073:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16073:32:88;;;;;;;;;;;;;;;;16057:48;;775:10;16138:16;;16128:26;;;:6;:26;;;;16120:35;;;;;15087:1087;;;;;;;:::o;540:229:91:-;716:45;743:4;749:2;753:7;716:26;:45::i;:::-;540:229;;;:::o;1315:136:25:-;1373:7;1400:43;1404:1;1407;1400:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1393:50;;1315:136;;;;:::o;708:619:104:-;768:4;1030:16;1057:19;1079:66;1057:88;;;;1248:7;1236:20;1224:32;;1288:11;1276:8;:23;;:42;;;;;1315:3;1303:15;;:8;:15;;1276:42;1268:51;;;;708:619;;;:::o;3640:391:93:-;3750:45;3777:4;3783:2;3787:7;3750:26;:45::i;:::-;3826:1;3812:16;;:2;:16;;;3808:216;;;3949:1;3918:10;:19;3929:7;3918:19;;;;;;;;;;;3912:33;;;;;;;;;;;;;;;;:38;3908:105;;3978:10;:19;3989:7;3978:19;;;;;;;;;;;;3971:26;;;;:::i;:::-;3908:105;3808:216;3640:391;;;:::o;1788:192:25:-;1874:7;1907:1;1902;:6;;1910:12;1894:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1894:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:9;1950:1;1946;:5;1934:17;;1971:1;1964:8;;;1788:192;;;;;:::o;2903:837:90:-;3013:45;3040:4;3046:2;3050:7;3013:26;:45::i;:::-;3091:1;3075:18;;:4;:18;;;3071:662;;;3139:40;3167:2;3171:7;3139:27;:40::i;:::-;3194;3226:7;3194:31;:40::i;:::-;3071:662;;;3270:1;3256:16;;:2;:16;;;3252:481;;;3318:47;3351:4;3357:7;3318:32;:47::i;:::-;3523:1;3494:17;:26;3512:7;3494:26;;;;;;;;;;;:30;;;;3541:45;3578:7;3541:36;:45::i;:::-;3252:481;;;3619:47;3652:4;3658:7;3619:32;:47::i;:::-;3681:40;3709:2;3713:7;3681:27;:40::i;:::-;3252:481;3071:662;2903:837;;;:::o;16888:93:88:-;;;;:::o;4379:186:90:-;4493:12;:16;4506:2;4493:16;;;;;;;;;;;;;;;:23;;;;4464:17;:26;4482:7;4464:26;;;;;;;;;;;:52;;;;4527:12;:16;4540:2;4527:16;;;;;;;;;;;;;;;4549:7;4527:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4527:30:90;;;;;;;;;;;;;;;;;;;4379:186;;:::o;4766:164::-;4870:10;:17;;;;4843:15;:24;4859:7;4843:24;;;;;;;;;;;:44;;;;4898:10;4914:7;4898:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4898:24:90;;;;;;;;;;;;;;;;;;;4766:164;:::o;5557:1135::-;5823:22;5848:32;5878:1;5848:12;:18;5861:4;5848:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;5823:57;;5891:18;5912:17;:26;5930:7;5912:26;;;;;;;;;;;;5891:47;;6059:14;6045:10;:28;6041:328;;6090:19;6112:12;:18;6125:4;6112:18;;;;;;;;;;;;;;;6131:14;6112:34;;;;;;;;;;;;;;;;6090:56;;6196:11;6163:12;:18;6176:4;6163:18;;;;;;;;;;;;;;;6182:10;6163:30;;;;;;;;;;;;;;;:44;;;;6313:10;6280:17;:30;6298:11;6280:30;;;;;;;;;;;:43;;;;6041:328;;6448:12;:18;6461:4;6448:18;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;5557:1135;;;;:::o;6987:1070::-;7240:22;7265:24;7287:1;7265:10;:17;;;;:21;;:24;;;;:::i;:::-;7240:49;;7300:18;7321:15;:24;7337:7;7321:24;;;;;;;;;;;;7300:45;;7672:19;7694:10;7705:14;7694:26;;;;;;;;;;;;;;;;7672:48;;7758:11;7733:10;7744;7733:22;;;;;;;;;;;;;;;:36;;;;7869:10;7838:15;:28;7854:11;7838:28;;;;;;;;;;;:41;;;;7992:10;:16;;;;;;;;;;;;;;;;;;;;;;;;8048:1;8021:15;:24;8037:7;8021:24;;;;;;;;;;;:28;;;;6987:1070;;;;:::o;321:896:46:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.6.0;\r\n\r\nimport \"../token/ERC721/ERC721Full.sol\";\r\nimport \"../token/ERC721/ERC721Burnable.sol\";\r\n\r\n/**\r\n * @title ERC721FullMock\r\n * This mock just provides public functions for setting metadata URI, getting all tokens of an owner,\r\n * checking token existence, removal of a token from an address\r\n */\r\ncontract ERC721FullMock is ERC721Full, ERC721Burnable {\r\n    constructor (string memory name, string memory symbol) public ERC721Full(name, symbol) { }\r\n\r\n    function exists(uint256 tokenId) public view returns (bool) {\r\n        return _exists(tokenId);\r\n    }\r\n\r\n    function tokensOfOwner(address owner) public view returns (uint256[] memory) {\r\n        return _tokensOfOwner(owner);\r\n    }\r\n\r\n    function setTokenURI(uint256 tokenId, string memory uri) public {\r\n        _setTokenURI(tokenId, uri);\r\n    }\r\n\r\n    function setBaseURI(string memory baseURI) public {\r\n        _setBaseURI(baseURI);\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override(ERC721, ERC721Full) {\r\n        super._beforeTokenTransfer(from, to, tokenId);\r\n    }\r\n\r\n    function mint(address to, uint256 tokenId) public {\r\n        _mint(to, tokenId);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\alexa_o12f\\Documents\\Programs\\arrakis-buidl\\contracts\\openzeppelin\\contracts\\mocks\\ERC721FullMock.sol",
  "ast": {
    "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/mocks/ERC721FullMock.sol",
    "exportedSymbols": {
      "ERC721FullMock": [
        4161
      ]
    },
    "id": 4162,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4060,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:46"
      },
      {
        "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "file": "../token/ERC721/ERC721Full.sol",
        "id": 4061,
        "nodeType": "ImportDirective",
        "scope": 4162,
        "sourceUnit": 9193,
        "src": "27:40:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "../token/ERC721/ERC721Burnable.sol",
        "id": 4062,
        "nodeType": "ImportDirective",
        "scope": 4162,
        "sourceUnit": 8820,
        "src": "69:44:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4063,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9192,
              "src": "348:10:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$9192",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 4064,
            "nodeType": "InheritanceSpecifier",
            "src": "348:10:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4065,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8819,
              "src": "360:14:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$8819",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 4066,
            "nodeType": "InheritanceSpecifier",
            "src": "360:14:46"
          }
        ],
        "contractDependencies": [
          118,
          2583,
          2819,
          8791,
          8819,
          9150,
          9192,
          9408,
          9546,
          9573,
          9608
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721FullMock\nThis mock just provides public functions for setting metadata URI, getting all tokens of an owner,\nchecking token existence, removal of a token from an address",
        "fullyImplemented": true,
        "id": 4161,
        "linearizedBaseContracts": [
          4161,
          8819,
          9192,
          9408,
          9608,
          9150,
          9573,
          8791,
          9546,
          2583,
          2819,
          118
        ],
        "name": "ERC721FullMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4077,
              "nodeType": "Block",
              "src": "469:3:46",
              "statements": []
            },
            "documentation": null,
            "id": 4078,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4073,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4068,
                    "src": "455:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4074,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4070,
                    "src": "461:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 4075,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4072,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9192,
                  "src": "444:10:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$9192_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "444:24:46"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4068,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4078,
                  "src": "395:18:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4067,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4070,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4078,
                  "src": "415:20:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4069,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "394:42:46"
            },
            "returnParameters": {
              "id": 4076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "469:0:46"
            },
            "scope": 4161,
            "src": "382:90:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4089,
              "nodeType": "Block",
              "src": "540:42:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4086,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "566:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4085,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8408,
                      "src": "558:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 4087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "558:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4084,
                  "id": 4088,
                  "nodeType": "Return",
                  "src": "551:23:46"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4f558e79",
            "id": 4090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4080,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4090,
                  "src": "496:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "495:17:46"
            },
            "returnParameters": {
              "id": 4084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4083,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4090,
                  "src": "534:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4082,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "533:6:46"
            },
            "scope": 4161,
            "src": "480:102:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4102,
              "nodeType": "Block",
              "src": "667:47:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4099,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4092,
                        "src": "700:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4098,
                      "name": "_tokensOfOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9000,
                      "src": "685:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (address) view returns (uint256[] storage pointer)"
                      }
                    },
                    "id": 4100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:21:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[] storage pointer"
                    }
                  },
                  "functionReturnParameters": 4097,
                  "id": 4101,
                  "nodeType": "Return",
                  "src": "678:28:46"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8462151c",
            "id": 4103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensOfOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4092,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4103,
                  "src": "613:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "612:15:46"
            },
            "returnParameters": {
              "id": 4097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4096,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4103,
                  "src": "649:16:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4094,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "649:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4095,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "649:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "648:18:46"
            },
            "scope": 4161,
            "src": "590:124:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4115,
              "nodeType": "Block",
              "src": "786:45:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4111,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4105,
                        "src": "810:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4112,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4107,
                        "src": "819:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 4110,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9346,
                      "src": "797:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 4113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "797:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4114,
                  "nodeType": "ExpressionStatement",
                  "src": "797:26:46"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "162094c4",
            "id": 4116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4105,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4116,
                  "src": "743:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4107,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4116,
                  "src": "760:17:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4106,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "742:36:46"
            },
            "returnParameters": {
              "id": 4109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "786:0:46"
            },
            "scope": 4161,
            "src": "722:109:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4125,
              "nodeType": "Block",
              "src": "889:39:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4122,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4118,
                        "src": "912:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 4121,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9356,
                      "src": "900:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 4123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:20:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4124,
                  "nodeType": "ExpressionStatement",
                  "src": "900:20:46"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "55f804b3",
            "id": 4126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBaseURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4118,
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4126,
                  "src": "859:21:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4117,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "858:23:46"
            },
            "returnParameters": {
              "id": 4120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "889:0:46"
            },
            "scope": 4161,
            "src": "839:89:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8790,
              9191
            ],
            "body": {
              "id": 4146,
              "nodeType": "Block",
              "src": "1055:64:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4141,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4128,
                        "src": "1093:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4142,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4130,
                        "src": "1099:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4143,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4132,
                        "src": "1103:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4138,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11652,
                        "src": "1066:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721FullMock_$4161",
                          "typeString": "contract super ERC721FullMock"
                        }
                      },
                      "id": 4140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9191,
                      "src": "1066:26:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1066:45:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4145,
                  "nodeType": "ExpressionStatement",
                  "src": "1066:45:46"
                }
              ]
            },
            "documentation": null,
            "id": 4147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4136,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 4134,
                  "name": "ERC721",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 8791,
                  "src": "1035:6:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$8791",
                    "typeString": "contract ERC721"
                  }
                },
                {
                  "contractScope": null,
                  "id": 4135,
                  "name": "ERC721Full",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 9192,
                  "src": "1043:10:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Full_$9192",
                    "typeString": "contract ERC721Full"
                  }
                }
              ],
              "src": "1026:28:46"
            },
            "parameters": {
              "id": 4133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4128,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4147,
                  "src": "966:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4130,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4147,
                  "src": "980:10:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4132,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4147,
                  "src": "992:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "965:43:46"
            },
            "returnParameters": {
              "id": 4137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1055:0:46"
            },
            "scope": 4161,
            "src": "936:183:46",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4159,
              "nodeType": "Block",
              "src": "1177:37:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4155,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4149,
                        "src": "1194:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4156,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4151,
                        "src": "1198:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4154,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8545,
                      "src": "1188:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:18:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4158,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:18:46"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "40c10f19",
            "id": 4160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4149,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4160,
                  "src": "1141:10:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4151,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4160,
                  "src": "1153:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1140:29:46"
            },
            "returnParameters": {
              "id": 4153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1177:0:46"
            },
            "scope": 4161,
            "src": "1127:87:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4162,
        "src": "321:896:46"
      }
    ],
    "src": "0:1219:46"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/mocks/ERC721FullMock.sol",
    "exportedSymbols": {
      "ERC721FullMock": [
        4161
      ]
    },
    "id": 4162,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4060,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:46"
      },
      {
        "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "file": "../token/ERC721/ERC721Full.sol",
        "id": 4061,
        "nodeType": "ImportDirective",
        "scope": 4162,
        "sourceUnit": 9193,
        "src": "27:40:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "../token/ERC721/ERC721Burnable.sol",
        "id": 4062,
        "nodeType": "ImportDirective",
        "scope": 4162,
        "sourceUnit": 8820,
        "src": "69:44:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4063,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9192,
              "src": "348:10:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$9192",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 4064,
            "nodeType": "InheritanceSpecifier",
            "src": "348:10:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4065,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8819,
              "src": "360:14:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$8819",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 4066,
            "nodeType": "InheritanceSpecifier",
            "src": "360:14:46"
          }
        ],
        "contractDependencies": [
          118,
          2583,
          2819,
          8791,
          8819,
          9150,
          9192,
          9408,
          9546,
          9573,
          9608
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721FullMock\nThis mock just provides public functions for setting metadata URI, getting all tokens of an owner,\nchecking token existence, removal of a token from an address",
        "fullyImplemented": true,
        "id": 4161,
        "linearizedBaseContracts": [
          4161,
          8819,
          9192,
          9408,
          9608,
          9150,
          9573,
          8791,
          9546,
          2583,
          2819,
          118
        ],
        "name": "ERC721FullMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4077,
              "nodeType": "Block",
              "src": "469:3:46",
              "statements": []
            },
            "documentation": null,
            "id": 4078,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4073,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4068,
                    "src": "455:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4074,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4070,
                    "src": "461:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 4075,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4072,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9192,
                  "src": "444:10:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$9192_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "444:24:46"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4068,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4078,
                  "src": "395:18:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4067,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4070,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4078,
                  "src": "415:20:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4069,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "394:42:46"
            },
            "returnParameters": {
              "id": 4076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "469:0:46"
            },
            "scope": 4161,
            "src": "382:90:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4089,
              "nodeType": "Block",
              "src": "540:42:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4086,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "566:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4085,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8408,
                      "src": "558:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 4087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "558:16:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4084,
                  "id": 4088,
                  "nodeType": "Return",
                  "src": "551:23:46"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4f558e79",
            "id": 4090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4080,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4090,
                  "src": "496:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "495:17:46"
            },
            "returnParameters": {
              "id": 4084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4083,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4090,
                  "src": "534:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4082,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "533:6:46"
            },
            "scope": 4161,
            "src": "480:102:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4102,
              "nodeType": "Block",
              "src": "667:47:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4099,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4092,
                        "src": "700:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4098,
                      "name": "_tokensOfOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9000,
                      "src": "685:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (address) view returns (uint256[] storage pointer)"
                      }
                    },
                    "id": 4100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:21:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[] storage pointer"
                    }
                  },
                  "functionReturnParameters": 4097,
                  "id": 4101,
                  "nodeType": "Return",
                  "src": "678:28:46"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8462151c",
            "id": 4103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensOfOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4092,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4103,
                  "src": "613:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "612:15:46"
            },
            "returnParameters": {
              "id": 4097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4096,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4103,
                  "src": "649:16:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4094,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "649:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4095,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "649:9:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "648:18:46"
            },
            "scope": 4161,
            "src": "590:124:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4115,
              "nodeType": "Block",
              "src": "786:45:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4111,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4105,
                        "src": "810:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4112,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4107,
                        "src": "819:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 4110,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9346,
                      "src": "797:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 4113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "797:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4114,
                  "nodeType": "ExpressionStatement",
                  "src": "797:26:46"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "162094c4",
            "id": 4116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4105,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4116,
                  "src": "743:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4107,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4116,
                  "src": "760:17:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4106,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "742:36:46"
            },
            "returnParameters": {
              "id": 4109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "786:0:46"
            },
            "scope": 4161,
            "src": "722:109:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4125,
              "nodeType": "Block",
              "src": "889:39:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4122,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4118,
                        "src": "912:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 4121,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9356,
                      "src": "900:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 4123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:20:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4124,
                  "nodeType": "ExpressionStatement",
                  "src": "900:20:46"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "55f804b3",
            "id": 4126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBaseURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4118,
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4126,
                  "src": "859:21:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4117,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "858:23:46"
            },
            "returnParameters": {
              "id": 4120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "889:0:46"
            },
            "scope": 4161,
            "src": "839:89:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8790,
              9191
            ],
            "body": {
              "id": 4146,
              "nodeType": "Block",
              "src": "1055:64:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4141,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4128,
                        "src": "1093:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4142,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4130,
                        "src": "1099:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4143,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4132,
                        "src": "1103:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4138,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11652,
                        "src": "1066:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721FullMock_$4161",
                          "typeString": "contract super ERC721FullMock"
                        }
                      },
                      "id": 4140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9191,
                      "src": "1066:26:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1066:45:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4145,
                  "nodeType": "ExpressionStatement",
                  "src": "1066:45:46"
                }
              ]
            },
            "documentation": null,
            "id": 4147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4136,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 4134,
                  "name": "ERC721",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 8791,
                  "src": "1035:6:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$8791",
                    "typeString": "contract ERC721"
                  }
                },
                {
                  "contractScope": null,
                  "id": 4135,
                  "name": "ERC721Full",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 9192,
                  "src": "1043:10:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Full_$9192",
                    "typeString": "contract ERC721Full"
                  }
                }
              ],
              "src": "1026:28:46"
            },
            "parameters": {
              "id": 4133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4128,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4147,
                  "src": "966:12:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4130,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4147,
                  "src": "980:10:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4132,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4147,
                  "src": "992:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "965:43:46"
            },
            "returnParameters": {
              "id": 4137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1055:0:46"
            },
            "scope": 4161,
            "src": "936:183:46",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4159,
              "nodeType": "Block",
              "src": "1177:37:46",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4155,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4149,
                        "src": "1194:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4156,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4151,
                        "src": "1198:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4154,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8545,
                      "src": "1188:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:18:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4158,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:18:46"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "40c10f19",
            "id": 4160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4149,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4160,
                  "src": "1141:10:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4151,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4160,
                  "src": "1153:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1140:29:46"
            },
            "returnParameters": {
              "id": 4153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1177:0:46"
            },
            "scope": 4161,
            "src": "1127:87:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4162,
        "src": "321:896:46"
      }
    ],
    "src": "0:1219:46"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-02-15T19:49:04.035Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.     * _Available since v2.5.0._"
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.      * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.      * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.      * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "ERC721FullMock This mock just provides public functions for setting metadata URI, getting all tokens of an owner, checking token existence, removal of a token from an address"
  },
  "userdoc": {
    "methods": {}
  }
}