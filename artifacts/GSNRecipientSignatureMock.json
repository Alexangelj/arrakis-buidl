{
  "contractName": "GSNRecipientSignatureMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedSigner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MockFunctionCalled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldRelayHub",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRelayHub",
          "type": "address"
        }
      ],
      "name": "RelayHubChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "relay",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "encodedFunction",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "transactionFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "approvalData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "acceptRelayedCall",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHubAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "actualCharge",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "preRetVal",
          "type": "bytes32"
        }
      ],
      "name": "postRelayedCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        }
      ],
      "name": "preRelayedCall",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relayHubVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mockFunction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MockFunctionCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRelayHub\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRelayHub\",\"type\":\"address\"}],\"name\":\"RelayHubChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relay\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedFunction\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"transactionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"acceptRelayedCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"actualCharge\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"preRetVal\",\"type\":\"bytes32\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayHubVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"acceptRelayedCall(address,address,bytes,uint256,uint256,uint256,uint256,bytes,uint256)\":{\"details\":\"Ensures that only transactions with a trusted signature can be relayed through the GSN.\"},\"getHubAddr()\":{\"details\":\"Returns the address of the {IRelayHub} contract for this recipient.\"},\"postRelayedCall(bytes,bool,uint256,bytes32)\":{\"details\":\"See `IRelayRecipient.postRelayedCall`.      * This function should not be overriden directly, use `_postRelayedCall` instead.      * * Requirements:      * - the caller must be the `RelayHub` contract.\"},\"preRelayedCall(bytes)\":{\"details\":\"See `IRelayRecipient.preRelayedCall`.      * This function should not be overriden directly, use `_preRelayedCall` instead.      * * Requirements:      * - the caller must be the `RelayHub` contract.\"},\"relayHubVersion()\":{\"details\":\"Returns the version string of the {IRelayHub} for which this recipient implementation was built. If {_upgradeRelayHub} is used, the new {IRelayHub} instance should be compatible with this version.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/mocks/GSNRecipientSignatureMock.sol\":\"GSNRecipientSignatureMock\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x4b1d0ba51adeaf6fbdd74575980939e3377d928f935ead03c27c04097e1ef9b6\",\"urls\":[\"bzz-raw://58f8f3877d9ec2131de69ea2d79c73f5f1fb36ac61dc1db950bbd11aa5f8952f\",\"dweb:/ipfs/QmaMkdu1zCyj4dNsLS3WYAVVt8aWwDm7jKDgeFKURVP56K\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/GSN/GSNRecipient.sol\":{\"keccak256\":\"0x84273beff9433c7c4c4b1e11237ae50bb18221727ab5e39aa86ece18f70fdb33\",\"urls\":[\"bzz-raw://d7f10b7f2219b7e8746d6077e7b854a89528b1f61e6113bc09f4e4445d45c168\",\"dweb:/ipfs/QmXp3urVhSJhc5HVccDTbjPnjdMU49uYG2W5xKAqf6xt3v\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/GSN/GSNRecipientSignature.sol\":{\"keccak256\":\"0x11587979a09bdc148833e3b6d94394f7c874eecd3cb94ef810efcb1bdc2f1d48\",\"urls\":[\"bzz-raw://d5a2f0ff840e1bb19adc6724f1c8a92129c641360a8f647f174a0c422a49f994\",\"dweb:/ipfs/QmX4NWC9dbDU5N3dBp9QUAFbpUZUDqWuszBvW3QRNZjh3u\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/GSN/IRelayHub.sol\":{\"keccak256\":\"0xf27819005071fe7b1d20f05ef7a0bcef29e457314d8dfbdae1104a6006508922\",\"urls\":[\"bzz-raw://2ccfb67201bcc4281aba630c647d65be22da673caa1f1fd282194f8ef6bcc998\",\"dweb:/ipfs/Qme3ixd3pHb55QkB1mnYNny9oc2eiL3jG69WE7yUSvzFob\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/GSN/IRelayRecipient.sol\":{\"keccak256\":\"0xa49326aa2674243bc5a2cdc2fab86bc35a1b3dd019af936ec661dff68d98bdb6\",\"urls\":[\"bzz-raw://5c0730f9c527038e549712129ab370706d0832182559ba8e6d7dab856b4a64ac\",\"dweb:/ipfs/QmYh576uThaq4bCdRF37cxyjuN596aHdMnzCTvNQ9VoSW9\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x376a939de851e7b0d72effcf05b92d53622ee1ea79d2cca58aceb35ab656e84a\",\"urls\":[\"bzz-raw://39b2c77d196e7586704ec5c34af4125dae9fc2fdec9cdc990e51826b8cc15805\",\"dweb:/ipfs/QmQ4TeUvAjVfQV19sHF43how8rR6jG1YnUWtaiywAws7JL\"]},\"/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/mocks/GSNRecipientSignatureMock.sol\":{\"keccak256\":\"0x24ac35aeed364153e3d9fdf3a53b49d95e4840b308bb9abc19419ebd996c277f\",\"urls\":[\"bzz-raw://50ae601dea6d26eef9f0391231f62626909e2aef5931d6e311c7d9071e38d183\",\"dweb:/ipfs/QmT6aCbcahD2JDhNp5w13RkATDNH4TWZr86WjfHqQ17miJ\"]}},\"version\":1}",
  "bytecode": "0x608060405273d216153c06e857cd7f72665e0af1d7d82172f4946000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b50604051610c69380380610c698339818101604052602081101561008757600080fd5b810190808051906020019092919050505080600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526039815260200180610c306039913960400191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610abf806101716000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633e6fec041461006757806374e861d61461007157806380274db7146100bb57806383947ea014610148578063ad61ccd514610309578063e06e0e221461038c575b600080fd5b61006f610425565b005b610079610453565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610132600480360360208110156100d157600080fd5b81019080803590602001906401000000008111156100ee57600080fd5b82018360208201111561010057600080fd5b8035906020019184600183028401116401000000008311171561012257600080fd5b909192939192939050505061047c565b6040518082815260200191505060405180910390f35b610287600480360361012081101561015f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101bc57600080fd5b8201836020820111156101ce57600080fd5b803590602001918460018302840111640100000000831117156101f057600080fd5b9091929391929390803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561023957600080fd5b82018360208201111561024b57600080fd5b8035906020019184600183028401116401000000008311171561026d57600080fd5b90919293919293908035906020019092919050505061055e565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102cd5780820151818401526020810190506102b2565b50505050905090810190601f1680156102fa5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b610311610788565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610351578082015181840152602081019050610336565b50505050905090810190601f16801561037e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610423600480360360808110156103a257600080fd5b81019080803590602001906401000000008111156103bf57600080fd5b8201836020820111156103d157600080fd5b803590602001918460018302840111640100000000831117156103f357600080fd5b909192939192939080351515906020019092919080359060200190929190803590602001909291905050506107c5565b005b7f52c66ed6ec9ca819cba26fe2b2650059270d8981b295af300187a964f54a8c2360405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610486610453565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610509576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610a666024913960400191505060405180910390fd5b61055683838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506108a7565b905092915050565b60006060808d8d8d8d8d8d8d8d610573610453565b30604051602001808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401898980828437808301925050508781526020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014019a50505050505050505050506040516020818303038152906040529050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661073087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061072284805190602001206108ae565b61090690919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16141561075e57610754610a0a565b9250925050610778565b61077260008081111561076d57fe5b610a2e565b92509250505b9b509b9950505050505050505050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b6107cd610453565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610850576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610a666024913960400191505060405180910390fd5b6108a085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050848484610a4f565b5050505050565b6000919050565b60008160405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c01828152602001915050604051602081830303815290604052805190602001209050919050565b6000604182511461091a5760009050610a04565b60008060006020850151925060408501519150606085015160001a90507f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08260001c111561096e5760009350505050610a04565b601b8160ff16141580156109865750601c8160ff1614155b156109975760009350505050610a04565b60018682858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156109f4573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b60006060610a2660405180602001604052806000815250610a55565b915091509091565b6000606082600b016040518060200160405280600081525091509150915091565b50505050565b600060606000839150915091509156fe47534e526563697069656e743a2063616c6c6572206973206e6f742052656c6179487562a2646970667358221220aae79035b4ca7a89f043acebd3888a6b30b71417cb84f2277cdcce673fa1eb1764736f6c6343000600003347534e526563697069656e745369676e61747572653a2074727573746564207369676e657220697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80633e6fec041461006757806374e861d61461007157806380274db7146100bb57806383947ea014610148578063ad61ccd514610309578063e06e0e221461038c575b600080fd5b61006f610425565b005b610079610453565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610132600480360360208110156100d157600080fd5b81019080803590602001906401000000008111156100ee57600080fd5b82018360208201111561010057600080fd5b8035906020019184600183028401116401000000008311171561012257600080fd5b909192939192939050505061047c565b6040518082815260200191505060405180910390f35b610287600480360361012081101561015f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101bc57600080fd5b8201836020820111156101ce57600080fd5b803590602001918460018302840111640100000000831117156101f057600080fd5b9091929391929390803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561023957600080fd5b82018360208201111561024b57600080fd5b8035906020019184600183028401116401000000008311171561026d57600080fd5b90919293919293908035906020019092919050505061055e565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102cd5780820151818401526020810190506102b2565b50505050905090810190601f1680156102fa5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b610311610788565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610351578082015181840152602081019050610336565b50505050905090810190601f16801561037e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610423600480360360808110156103a257600080fd5b81019080803590602001906401000000008111156103bf57600080fd5b8201836020820111156103d157600080fd5b803590602001918460018302840111640100000000831117156103f357600080fd5b909192939192939080351515906020019092919080359060200190929190803590602001909291905050506107c5565b005b7f52c66ed6ec9ca819cba26fe2b2650059270d8981b295af300187a964f54a8c2360405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610486610453565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610509576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610a666024913960400191505060405180910390fd5b61055683838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506108a7565b905092915050565b60006060808d8d8d8d8d8d8d8d610573610453565b30604051602001808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401898980828437808301925050508781526020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014019a50505050505050505050506040516020818303038152906040529050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661073087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061072284805190602001206108ae565b61090690919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16141561075e57610754610a0a565b9250925050610778565b61077260008081111561076d57fe5b610a2e565b92509250505b9b509b9950505050505050505050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b6107cd610453565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610850576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610a666024913960400191505060405180910390fd5b6108a085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050848484610a4f565b5050505050565b6000919050565b60008160405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c01828152602001915050604051602081830303815290604052805190602001209050919050565b6000604182511461091a5760009050610a04565b60008060006020850151925060408501519150606085015160001a90507f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08260001c111561096e5760009350505050610a04565b601b8160ff16141580156109865750601c8160ff1614155b156109975760009350505050610a04565b60018682858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156109f4573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b60006060610a2660405180602001604052806000815250610a55565b915091509091565b6000606082600b016040518060200160405280600081525091509150915091565b50505050565b600060606000839150915091509156fe47534e526563697069656e743a2063616c6c6572206973206e6f742052656c6179487562a2646970667358221220aae79035b4ca7a89f043acebd3888a6b30b71417cb84f2277cdcce673fa1eb1764736f6c63430006000033",
  "sourceMap": "108:284:57:-:0;;;871:42:3;843:70;;;;;;;;;;;;;;;;;;;;189:82:57;8:9:-1;5:2;;;30:1;27;20:12;5:2;189:82:57;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;189:82:57;;;;;;;;;;;;;;;;253:13;948:1:5;923:27;;:13;:27;;;;915:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1040:13;1023:14;;:30;;;;;;;;;;;;;;;;;;862:199;189:82:57;108:284;;;;;;",
  "deployedSourceMap": "108:284:57:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;108:284:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;314:75;;;:::i;:::-;;1450:96:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5172:228;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5172:228:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5172:228:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5172:228:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5172:228:3;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1188:1070:5;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1188:1070:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1188:1070:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1188:1070:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1188:1070:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1188:1070:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1188:1070:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1188:1070:5;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1188:1070:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2725:230:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2725:230:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6057:294;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6057:294:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6057:294:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6057:294:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6057:294:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;314:75:57;361:20;;;;;;;;;;314:75::o;1450:96:3:-;1502:7;1529:9;;;;;;;;;;;1522:16;;1450:96;:::o;5172:228::-;5255:7;5297:12;:10;:12::i;:::-;5283:26;;:10;:26;;;5275:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5368:24;5384:7;;5368:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5368:24:3;;;;;;:15;:24::i;:::-;5361:31;;5172:228;;;;:::o;1188:1070:5:-;1562:7;1571:12;1601:17;1652:5;1672:4;1691:15;;1721:14;1750:8;1773;1796:5;1848:12;:10;:12::i;:::-;1925:4;1621:363;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;1621:363:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1621:363:5;;;1601:383;;2065:14;;;;;;;;;;;1999:80;;:62;2048:12;;1999:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1999:62:5;;;;;;:40;2009:4;1999:15;;;;;;:38;:40::i;:::-;:48;;:62;;;;:::i;:::-;:80;;;1995:256;;;2103:21;:19;:21::i;:::-;2096:28;;;;;;;1995:256;2164:75;2191:46;2183:55;;;;;;;;2164:18;:75::i;:::-;2157:82;;;;;1188:1070;;;;;;;;;;;;;;;:::o;2725:230:3:-;2773:13;2933:14;;;;;;;;;;;;;;;;;;;2725:230;:::o;6057:294::-;6220:12;:10;:12::i;:::-;6206:26;;:10;:26;;;6198:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6284:59;6301:7;;6284:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6284:59:3;;;;;;6310:7;6319:12;6333:9;6284:16;:59::i;:::-;6057:294;;;;;:::o;2266:86:5:-;2340:7;2266:86;;;:::o;3457:269:9:-;3526:7;3712:4;3659:58;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3659:58:9;;;3649:69;;;;;;3642:76;;3457:269;;;:::o;1253:1930::-;1331:7;1414:2;1394:9;:16;:22;1390:74;;1449:1;1433:19;;;;1390:74;1533:9;1553;1573:7;1825:4;1814:9;1810:20;1804:27;1799:32;;1871:4;1860:9;1856:20;1850:27;1845:32;;1925:4;1914:9;1910:20;1904:27;1901:1;1896:36;1891:41;;2855:66;2850:1;2842:10;;:79;2838:129;;;2953:1;2938:17;;;;;;;2838:129;2988:2;2983:1;:7;;;;:18;;;;;2999:2;2994:1;:7;;;;2983:18;2979:68;;;3033:1;3018:17;;;;;;;2979:68;3151:24;3161:4;3167:1;3170;3173;3151:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3151:24:9;;;;;;;;3144:31;;;;;1253:1930;;;;;:::o;6968:126:3:-;7022:7;7031:12;7063:23;;;;;;;;;;;;;:19;:23::i;:::-;7056:30;;;;6968:126;;:::o;7554:158::-;7624:7;7633:12;7690:9;1028:2;7666:33;7658:46;;;;;;;;;;;;;;;;7554:158;;;:::o;2360:93:5:-;;;;;:::o;7263:155:3:-;7337:7;7346:12;971:1;7402:7;7371:39;;;;7263:155;;;:::o",
  "source": "pragma solidity ^0.6.0;\r\n\r\nimport \"../GSN/GSNRecipient.sol\";\r\nimport \"../GSN/GSNRecipientSignature.sol\";\r\n\r\ncontract GSNRecipientSignatureMock is GSNRecipient, GSNRecipientSignature {\r\n    constructor(address trustedSigner) public GSNRecipientSignature(trustedSigner) { }\r\n\r\n    event MockFunctionCalled();\r\n\r\n    function mockFunction() public {\r\n        emit MockFunctionCalled();\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\alexa_o12f\\Documents\\Programs\\arrakis-buidl\\contracts\\openzeppelin\\contracts\\mocks\\GSNRecipientSignatureMock.sol",
  "ast": {
    "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/mocks/GSNRecipientSignatureMock.sol",
    "exportedSymbols": {
      "GSNRecipientSignatureMock": [
        5236
      ]
    },
    "id": 5237,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5211,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:57"
      },
      {
        "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/GSN/GSNRecipient.sol",
        "file": "../GSN/GSNRecipient.sol",
        "id": 5212,
        "nodeType": "ImportDirective",
        "scope": 5237,
        "sourceUnit": 564,
        "src": "27:33:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/GSN/GSNRecipientSignature.sol",
        "file": "../GSN/GSNRecipientSignature.sol",
        "id": 5213,
        "nodeType": "ImportDirective",
        "scope": 5237,
        "sourceUnit": 1039,
        "src": "62:42:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5214,
              "name": "GSNRecipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 563,
              "src": "146:12:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GSNRecipient_$563",
                "typeString": "contract GSNRecipient"
              }
            },
            "id": 5215,
            "nodeType": "InheritanceSpecifier",
            "src": "146:12:57"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5216,
              "name": "GSNRecipientSignature",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1038,
              "src": "160:21:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GSNRecipientSignature_$1038",
                "typeString": "contract GSNRecipientSignature"
              }
            },
            "id": 5217,
            "nodeType": "InheritanceSpecifier",
            "src": "160:21:57"
          }
        ],
        "contractDependencies": [
          225,
          563,
          1038,
          1342
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5236,
        "linearizedBaseContracts": [
          5236,
          1038,
          563,
          225,
          1342
        ],
        "name": "GSNRecipientSignatureMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5225,
              "nodeType": "Block",
              "src": "268:3:57",
              "statements": []
            },
            "documentation": null,
            "id": 5226,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5222,
                    "name": "trustedSigner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5219,
                    "src": "253:13:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5223,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5221,
                  "name": "GSNRecipientSignature",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1038,
                  "src": "231:21:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_GSNRecipientSignature_$1038_$",
                    "typeString": "type(contract GSNRecipientSignature)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "231:36:57"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5219,
                  "name": "trustedSigner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5226,
                  "src": "201:21:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "200:23:57"
            },
            "returnParameters": {
              "id": 5224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:0:57"
            },
            "scope": 5236,
            "src": "189:82:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5228,
            "name": "MockFunctionCalled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "303:2:57"
            },
            "src": "279:27:57"
          },
          {
            "body": {
              "id": 5234,
              "nodeType": "Block",
              "src": "345:44:57",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5231,
                      "name": "MockFunctionCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5228,
                      "src": "361:18:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "361:20:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5233,
                  "nodeType": "EmitStatement",
                  "src": "356:25:57"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3e6fec04",
            "id": 5235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mockFunction",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:2:57"
            },
            "returnParameters": {
              "id": 5230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:0:57"
            },
            "scope": 5236,
            "src": "314:75:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5237,
        "src": "108:284:57"
      }
    ],
    "src": "0:394:57"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/mocks/GSNRecipientSignatureMock.sol",
    "exportedSymbols": {
      "GSNRecipientSignatureMock": [
        5236
      ]
    },
    "id": 5237,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5211,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:57"
      },
      {
        "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/GSN/GSNRecipient.sol",
        "file": "../GSN/GSNRecipient.sol",
        "id": 5212,
        "nodeType": "ImportDirective",
        "scope": 5237,
        "sourceUnit": 564,
        "src": "27:33:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/alexa_o12f/Documents/Programs/arrakis-buidl/contracts/openzeppelin/contracts/GSN/GSNRecipientSignature.sol",
        "file": "../GSN/GSNRecipientSignature.sol",
        "id": 5213,
        "nodeType": "ImportDirective",
        "scope": 5237,
        "sourceUnit": 1039,
        "src": "62:42:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5214,
              "name": "GSNRecipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 563,
              "src": "146:12:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GSNRecipient_$563",
                "typeString": "contract GSNRecipient"
              }
            },
            "id": 5215,
            "nodeType": "InheritanceSpecifier",
            "src": "146:12:57"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5216,
              "name": "GSNRecipientSignature",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1038,
              "src": "160:21:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GSNRecipientSignature_$1038",
                "typeString": "contract GSNRecipientSignature"
              }
            },
            "id": 5217,
            "nodeType": "InheritanceSpecifier",
            "src": "160:21:57"
          }
        ],
        "contractDependencies": [
          225,
          563,
          1038,
          1342
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5236,
        "linearizedBaseContracts": [
          5236,
          1038,
          563,
          225,
          1342
        ],
        "name": "GSNRecipientSignatureMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5225,
              "nodeType": "Block",
              "src": "268:3:57",
              "statements": []
            },
            "documentation": null,
            "id": 5226,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5222,
                    "name": "trustedSigner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5219,
                    "src": "253:13:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5223,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5221,
                  "name": "GSNRecipientSignature",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1038,
                  "src": "231:21:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_GSNRecipientSignature_$1038_$",
                    "typeString": "type(contract GSNRecipientSignature)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "231:36:57"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5219,
                  "name": "trustedSigner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5226,
                  "src": "201:21:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "200:23:57"
            },
            "returnParameters": {
              "id": 5224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:0:57"
            },
            "scope": 5236,
            "src": "189:82:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5228,
            "name": "MockFunctionCalled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "303:2:57"
            },
            "src": "279:27:57"
          },
          {
            "body": {
              "id": 5234,
              "nodeType": "Block",
              "src": "345:44:57",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5231,
                      "name": "MockFunctionCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5228,
                      "src": "361:18:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "361:20:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5233,
                  "nodeType": "EmitStatement",
                  "src": "356:25:57"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3e6fec04",
            "id": 5235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mockFunction",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:2:57"
            },
            "returnParameters": {
              "id": 5230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:0:57"
            },
            "scope": 5236,
            "src": "314:75:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5237,
        "src": "108:284:57"
      }
    ],
    "src": "0:394:57"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-02-15T23:11:41.289Z",
  "devdoc": {
    "methods": {
      "acceptRelayedCall(address,address,bytes,uint256,uint256,uint256,uint256,bytes,uint256)": {
        "details": "Ensures that only transactions with a trusted signature can be relayed through the GSN."
      },
      "getHubAddr()": {
        "details": "Returns the address of the {IRelayHub} contract for this recipient."
      },
      "postRelayedCall(bytes,bool,uint256,bytes32)": {
        "details": "See `IRelayRecipient.postRelayedCall`.      * This function should not be overriden directly, use `_postRelayedCall` instead.      * * Requirements:      * - the caller must be the `RelayHub` contract."
      },
      "preRelayedCall(bytes)": {
        "details": "See `IRelayRecipient.preRelayedCall`.      * This function should not be overriden directly, use `_preRelayedCall` instead.      * * Requirements:      * - the caller must be the `RelayHub` contract."
      },
      "relayHubVersion()": {
        "details": "Returns the version string of the {IRelayHub} for which this recipient implementation was built. If {_upgradeRelayHub} is used, the new {IRelayHub} instance should be compatible with this version."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}